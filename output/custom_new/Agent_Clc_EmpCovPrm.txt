-- 10/01/2010 - AB - Issue 97531 Customized the procedure to add the clients  customized fields.
CREATE PROCEDURE Clc_EmpCovPrm
@Emp nVarChar(15) = NULL,
@Eml nVarChar(15) = NULL

AS
SET NOCOUNT ON

DECLARE @EmpInner VARCHAR(MAX)
DECLARE @EmlInner VARCHAR(MAX)
DECLARE @PlnTyp VARCHAR(MAX)
DECLARE @Action VARCHAR(MAX)
DECLARE @BenChgEvt VARCHAR(MAX)
DECLARE @Ben VARCHAR(MAX)
DECLARE @ChangeEffDt DATE
DECLARE @ChangeDedStartDt DATE
DECLARE @ChangePayrollEffectiveDt DATE
DECLARE @CmpCov MONEY 
DECLARE @EmpCov MONEY 
DECLARE @EmpPrm MONEY 
DECLARE @CmpPrm MONEY 
DECLARE @CmpCovAgt MONEY 
DECLARE @EmpCovAgt MONEY 
DECLARE @EmpPrmAgt MONEY 
DECLARE @CmpPrmAgt MONEY 
DECLARE @Units INT
DECLARE @EligDt DATE
DECLARE @TotCov MONEY
DECLARE @totPrm MONEY
DECLARE @Flex MONEY
DECLARE @EmpBenEffDt DATE
   
IF (NOT @Emp IS NULL AND NOT @Eml IS NULL)
BEGIN

         
         DECLARE db_cursor CURSOR FOR  
          Select DISTINCT
            t.Emp, 
            t.Eml, 
            ZZBenPln.PlanType, 
            Eml.EmlEffDt, 
            ISNULL((SELECT TOP 1 CASE WHEN PayCalPayDt < PayCalEndDt THEN PayCalPayDt ELSE PayCalEndDt END AS PayCalEndDt FROM PayCal WHERE (PayGrp = Eml.PayGrp AND PayCalStDt >= GETDATE()) AND (PayCal.PayCalEfdDt IS NULL) ORDER BY PayCalEffDt ASC), dbo.NuDateGetDate(GETDATE())), 
            ISNULL((SELECT TOP 1 CASE WHEN PayCalPayDt < PayCalEndDt THEN PayCalPayDt ELSE PayCalEndDt END AS PayCalEndDt FROM PayCal WHERE (PayGrp = Eml.PayGrp AND PayCalStDt >= GETDATE()) AND (PayCal.PayCalEfdDt IS NULL) ORDER BY PayCalEffDt ASC), dbo.NuDateGetDate(GETDATE())),
            (SELECT RTRIM(cast(ConfigValues as nvarchar(max))) FROM Cfg WHERE Cfg='BenChgAct'),
            'Salary Change',
            t.CmpCov,
            t.EmpCov,
            t.CmpPrem,
            t.EmpPrem,
            t.Ben,
            t.Units,
            t.EligibleDt,
            t.EmpBenEffDt
           From ZZEmpBen t INNER JOIN ZZBen  b ON t.Ben=b.Ben
                                  INNER JOIN ZZBenPln ON b.BenPln=ZZBenPln.BenPln,  ZZEml AS Eml
                   Where t.Emp = @Emp AND t.Eml = @Eml AND t.Ben = b.Ben AND t.Emp = Eml.Emp And t.Eml = Eml.Eml 
         And ((b.ECovMultipleFld In ('AnnualSalary','MonthlySalary','BiWeeklySalary','WeeklySalary','DailySalary','HourlySalary','BLifSalCZ','ADDSalCZ','SL1xSalary','SL2xSalary','ADDHrSalCZ','BLifHrSalCZ','SLHr1xCZ','SLHr2xCZ','LTDSalCZ') 
               or b.CCovMultipleFld In ('AnnualSalary','MonthlySalary','BiWeeklySalary','WeeklySalary','DailySalary','HourlySalary','BLifSalCZ','ADDSalCZ','SL1xSalary','SL2xSalary','ADDHrSalCZ','BLifHrSalCZ','SLHr1xCZ','SLHr2xCZ','LTDSalCZ')) 
                   OR t.AnnElectAmt IS NOT NULL 
                   OR t.EmpPayPdDed IS NOT NULL) 
                   And Not ((Not BenEndDt Is Null And BenEndDt < getDate()) Or ( Not EmpBenEfdDt Is Null And EmpBenEfdDt < GetDate()))
                   And Eml.Emlefddt is null 
            ORDER BY EmpBenEffDt ASC

          OPEN db_cursor  
          FETCH NEXT FROM db_cursor INTO @EmpInner, @EmlInner, @PlnTyp, @ChangeEffDt, @ChangeDedStartDt, @ChangePayrollEffectiveDt, @Action, @BenChgEvt, @CmpCov, @EmpCov, @CmpPrm, @EmpPrm, @Ben, @Units, @EligDt, @EmpBenEffDt

          WHILE @@FETCH_STATUS = 0  
          BEGIN  
            exec Clc_BenCovPrm @EmpInner, @EmlInner, @Ben, @ChangeEffDt, @Units, @EligDt, @EmpCovAgt OUTPUT, @CmpCovAgt OUTPUT, @TotCov OUTPUT, @EmpPrmAgt OUTPUT, @CmpPrmAgt OUTPUT, @totPrm OUTPUT, @Flex OUTPUT     
            
            IF @CmpCovAgt <> @CmpCov OR @EmpCovAgt <> @EmpCov OR @EmpPrmAgt <> @EmpPrm OR @CmpPrmAgt <> @CmpPrm
            BEGIN
              INSERT INTO EmpBenChgEvt
              (Emp, Eml, PlnTyp, ChangeEffDt, ChangeDedStartDt, ChangePayrollEffectiveDt, Action, BenChgEvt)    
              SELECT @EmpInner, @EmlInner, @PlnTyp, @ChangeEffDt, @ChangeDedStartDt, @ChangePayrollEffectiveDt, @Action, @BenChgEvt
              WHERE NOT EXISTS (SELECT 1 FROM ZZEmpBenChgEvt WHERE Emp=@EmpInner AND Eml=@EmlInner AND PlnTyp=@PlnTyp)
            END
            
            FETCH NEXT FROM db_cursor INTO @EmpInner, @EmlInner, @PlnTyp, @ChangeEffDt, @ChangeDedStartDt, @ChangePayrollEffectiveDt, @Action, @BenChgEvt, @CmpCov, @EmpCov, @CmpPrm, @EmpPrm, @Ben, @Units, @EligDt, @EmpBenEffDt
          END  

          CLOSE db_cursor  
          DEALLOCATE db_cursor 
          
       
         Update ZZEmpBenElg Set Units = Units, EmpPrem = EmpPrem
         From ZZEmpBenElg t, ZZBen b, ZZEml E
         Where t.Emp = @Emp AND t.Eml = @Eml AND t.Ben = b.Ben AND t.Emp = E.Emp And t.Eml = E.Eml 
         And ((b.ECovMultipleFld In ('AnnualSalary','MonthlySalary','BiWeeklySalary','WeeklySalary','DailySalary','HourlySalary','BLifSalCZ','ADDSalCZ','SL1xSalary','SL2xSalary','ADDHrSalCZ','BLifHrSalCZ','SLHr1xCZ','SLHr2xCZ','LTDSalCZ') 
               or b.CCovMultipleFld In ('AnnualSalary','MonthlySalary','BiWeeklySalary','WeeklySalary','DailySalary','HourlySalary','BLifSalCZ','ADDSalCZ','SL1xSalary','SL2xSalary','ADDHrSalCZ','BLifHrSalCZ','SLHr1xCZ','SLHr2xCZ','LTDSalCZ')) 
         OR t.AnnElectAmt IS NOT NULL 
         OR t.EmpPayPdDed IS NOT NULL) 
         And Not ((Not BenEndDt Is Null And BenEndDt < getDate()) Or ( Not EmpBenElgEfdDt Is Null And EmpBenElgEfdDt < GetDate()))
         And E.Emlefddt is null
         
END 
ELSE 
BEGIN 
         DECLARE db_cursor CURSOR FOR  
          Select DISTINCT
            t.Emp, 
            t.Eml, 
            ZZBenPln.PlanType, 
            Eml.EmlEffDt, 
            ISNULL((SELECT TOP 1 CASE WHEN PayCalPayDt < PayCalEndDt THEN PayCalPayDt ELSE PayCalEndDt END AS PayCalEndDt FROM PayCal WHERE (PayGrp = Eml.PayGrp AND PayCalStDt >= GETDATE()) AND (PayCal.PayCalEfdDt IS NULL) ORDER BY PayCalEffDt ASC), dbo.NuDateGetDate(GETDATE())), 
            ISNULL((SELECT TOP 1 CASE WHEN PayCalPayDt < PayCalEndDt THEN PayCalPayDt ELSE PayCalEndDt END AS PayCalEndDt FROM PayCal WHERE (PayGrp = Eml.PayGrp AND PayCalStDt >= GETDATE()) AND (PayCal.PayCalEfdDt IS NULL) ORDER BY PayCalEffDt ASC), dbo.NuDateGetDate(GETDATE())),
            (SELECT RTRIM(cast(ConfigValues as nvarchar(max))) FROM Cfg WHERE Cfg='BenChgAct'),
            'Salary Change',
            t.CmpCov,
            t.EmpCov,
            t.CmpPrem,
            t.EmpPrem,
            t.Ben,
            t.Units,
            t.EligibleDt,
            t.EmpBenEffDt
           From ZZEmpBen t INNER JOIN ZZBen  b ON t.Ben=b.Ben
                        INNER JOIN ZZBenPln ON b.BenPln=ZZBenPln.BenPln,  ZZEml Eml
         Where t.Ben = b.Ben AND t.Emp = Eml.Emp And t.Eml = Eml.Eml 
         And ((b.ECovMultipleFld In ('AnnualSalary','MonthlySalary','BiWeeklySalary','WeeklySalary','DailySalary','HourlySalary','BLifSalCZ','ADDSalCZ','SL1xSalary','SL2xSalary','ADDHrSalCZ','BLifHrSalCZ','SLHr1xCZ','SLHr2xCZ','LTDSalCZ') 
               or b.CCovMultipleFld In ('AnnualSalary','MonthlySalary','BiWeeklySalary','WeeklySalary','DailySalary','HourlySalary','BLifSalCZ','ADDSalCZ','SL1xSalary','SL2xSalary','ADDHrSalCZ','BLifHrSalCZ','SLHr1xCZ','SLHr2xCZ','LTDSalCZ')) 
         OR t.AnnElectAmt IS NOT NULL 
         OR t.EmpPayPdDed IS NOT NULL) 
         And Not ((Not BenEndDt Is Null And BenEndDt < getDate()) Or ( Not EmpBenEfdDt Is Null And EmpBenEfdDt < GetDate()))
         And Eml.Emlefddt is null And Eml.EmpSts NOT IN ('Terminated')
         ORDER BY EmpBenEffDt ASC

          OPEN db_cursor  
           FETCH NEXT FROM db_cursor INTO @EmpInner, @EmlInner, @PlnTyp, @ChangeEffDt, @ChangeDedStartDt, @ChangePayrollEffectiveDt, @Action, @BenChgEvt, @CmpCov, @EmpCov, @CmpPrm, @EmpPrm, @Ben, @Units, @EligDt, @EmpBenEffDt

          WHILE @@FETCH_STATUS = 0  
          BEGIN  
            exec Clc_BenCovPrm @EmpInner, @EmlInner, @Ben, @ChangeEffDt, @Units, @EligDt, @EmpCovAgt OUTPUT, @CmpCovAgt OUTPUT, @TotCov OUTPUT, @EmpPrmAgt OUTPUT, @CmpPrmAgt OUTPUT, @totPrm OUTPUT, @Flex OUTPUT     
            
            IF @CmpCovAgt <> @CmpCov OR @EmpCovAgt <> @EmpCov OR @EmpPrmAgt <> @EmpPrm OR @CmpPrmAgt <> @CmpPrm
            BEGIN
              INSERT INTO EmpBenChgEvt
              (Emp, Eml, PlnTyp, ChangeEffDt, ChangeDedStartDt, ChangePayrollEffectiveDt, Action, BenChgEvt)    
              SELECT @EmpInner, @EmlInner, @PlnTyp, @ChangeEffDt, @ChangeDedStartDt, @ChangePayrollEffectiveDt, @Action, @BenChgEvt
              WHERE NOT EXISTS (SELECT 1 FROM ZZEmpBenChgEvt WHERE Emp=@EmpInner AND Eml=@EmlInner AND PlnTyp=@PlnTyp)
            END
            
            FETCH NEXT FROM db_cursor INTO @EmpInner, @EmlInner, @PlnTyp, @ChangeEffDt, @ChangeDedStartDt, @ChangePayrollEffectiveDt, @Action, @BenChgEvt, @CmpCov, @EmpCov, @CmpPrm, @EmpPrm, @Ben, @Units, @EligDt, @EmpBenEffDt
          END  

          CLOSE db_cursor  
          DEALLOCATE db_cursor 
        
         

         Update ZZEmpBenElg Set Units = Units, EmpPrem = EmpPrem
         From ZZEmpBenElg t, ZZBen b, ZZEml E
         Where t.Ben = b.Ben AND t.Emp = E.Emp And t.Eml = E.Eml 
         And ((b.ECovMultipleFld In ('AnnualSalary','MonthlySalary','BiWeeklySalary','WeeklySalary','DailySalary','HourlySalary','BLifSalCZ','ADDSalCZ','SL1xSalary','SL2xSalary','ADDHrSalCZ','BLifHrSalCZ','SLHr1xCZ','SLHr2xCZ','LTDSalCZ') 
               or b.CCovMultipleFld In ('AnnualSalary','MonthlySalary','BiWeeklySalary','WeeklySalary','DailySalary','HourlySalary','BLifSalCZ','ADDSalCZ','SL1xSalary','SL2xSalary','ADDHrSalCZ','BLifHrSalCZ','SLHr1xCZ','SLHr2xCZ','LTDSalCZ')) 
         OR t.AnnElectAmt IS NOT NULL 
         OR t.EmpPayPdDed IS NOT NULL) 
         And Not ((Not BenEndDt Is Null And BenEndDt < getDate()) Or ( Not EmpBenElgEfdDt Is Null And EmpBenElgEfdDt < GetDate()))
         And E.Emlefddt is null And E.EmpSts NOT IN ('Terminated')
END 
SET NOCOUNT OFF