<!-- Form: EmpDep Starts -->
  <script name="PersonalCombo" />
  <script name="StatusCombo" />
  <event name="onLoad" where="Server">
    <foreach dataset="RelBen">
      <set var="[varRelations]">[fld_RelBen.Rel]:[fld_RelBen.BenPart];[varRelations]</set>
    </foreach>

  </event>
  
  <dataset name="RelBen">
    <tables>
      <tbl name="Rel" />
    </tables>
    <display>
      <fld name="Rel" />
      <fld name="BenPart" />
    </display>
  </dataset>
  
<event name="onChange" ctl="Dependent" where="Client" >
<native lang="Javascript">
<![CDATA[
v_arrCtlParts = NuStr.toArray(prm_sCtl, "_");
v_index = v_arrCtlParts[SQROPEN]3[SQRCLOSE];
var v_formMode=NuView.Document.View;
var v_dependent_newVal="N_Dependent_main_"+v_index;
var v_dependent_oldVal="O_Dependent_main_"+v_index;
var v_dependentVal=ctlGetVal("N_Dep_main_"+v_index);
var v_varNewValofDependent=ctlGetDef(v_dependent_newVal);
var v_varOldValofDependent=ctlGetVal(v_dependent_oldVal);
if(v_varOldValofDependent=="Yes" && v_varNewValofDependent.checked || 
v_varOldValofDependent=="No" && !v_varNewValofDependent.checked ||
v_varOldValofDependent=="No" && v_varNewValofDependent.checked){
//"No change TODO"
}
else{
if(v_formMode=="edit"){
v_datasource = new NuDatasource();
v_datasource.setName("EmpDepIdDataset");
v_datasource.setUrlParameter("F_NavId", ctlGetVal("F_NavId"));
v_datasource.open();
v_iCol = v_datasource.getColumnNumByName("Dep");
while(v_datasource.next()) {
v_row = v_datasource.getRow();
v_dependentVal = v_row.getValue(v_iCol);
}
v_datasource.close();
}
v_datasource = new NuDatasource();
v_datasource.setName("DependentBenefitChk");
v_datasource.setUrlParameter("N_Emp_main_1", ctlGetVal("N_Emp_main_1"));
v_datasource.setUrlParameter("N_Emp_Dep_var",v_dependentVal);
v_datasource.open();
if(v_datasource.next()) {
alert("The person you are trying to remove as being a dependent has current benefit coverage. In order to remove this person from being a dependent their coverage needs to stop first. Please contact your HRAdmin or BenAdmin to stop coverage for this dependent");
ctlSetVal(v_dependent_newVal,"Yes");
return;
}
else{
//"No Benefits to Dependent - So NoMessage"
}
v_datasource.close();
}
]]>
</native>
</event>

  <event name="global" where="Client">
    <native lang="JavaScript">
      <![CDATA[
        function chkDepBnfChg() {
          var v_Return;
          var v_isDone;
          var v_i;
          var v_iCnt;
          var v_bNewBenChk;
          var v_bOldBenChk;
          var v_sBirthDate;
          var v_DepSSNReq = '[Cfg_DepSSNReq]' ;

          v_Return = true;
          v_i = 1;
          v_iCnt = ctlGetVal("F_RowCnt_main");
          v_isDone = false;

          if(ctlGetDef("N_DepFirstName_main_1") && ctlGetVal("N_DepFirstName_main_1")==""){
             msg("FldRequired","dataset=main|ctl=" + ctlGetProp("N_DepFirstName_main_1","title"));
             v_Return = false;
          }
          if(ctlGetDef("N_DepLastName_main_1") && ctlGetVal("N_DepLastName_main_1")==""){
             msg("FldRequired","dataset=main|ctl=" + ctlGetProp("N_DepLastName_main_1","title"));
             v_Return = false;
          }
    
          while (!v_isDone && (v_i <= v_iCnt)) {
            if (!v_Return) {
              v_isDone = true;
            } else {
              v_sBirthDate = ctlGetVal("N_DepBirthDt_main_" + v_i);
              if (v_sBirthDate == "") {
              } else if (NuStr.toDate(v_sBirthDate) > NuDate.now()) {
                //REQ 567-LM-NV - Changed For New Message Functionality
                //msg("Birth Date Incorrect", "msgtext=Birth Date " + v_sBirthDate + " should be less than current date.");
                msg("IncorrectBirthDt", "VarBirthDate=" + v_sBirthDate);
                v_Return = false;
              }
              
              var varBenRel = "";
              
              if(ctlGetVal("F_View") == "edit") {
                var benList = "[varRelations]";
                var elements = benList.split(";");
                
                for(var iCnt = 0; iCnt < elements.length; ++iCnt) {
                  var tmp = elements[SQROPEN]iCnt[SQRCLOSE];
                  var tmpArray = tmp.split(":");
                  var relationTmp = tmpArray[SQROPEN]0[SQRCLOSE];
                  var valueTmp = tmpArray[SQROPEN]1[SQRCLOSE];
                  
                  if(relationTmp == ctlGetVal("N_DepRelation_main_1")) {
                    varBenRel = valueTmp;
                  }
                }
              }
              
              if ((ctlGetVal("N_Dependent_main_" + v_i) == "Yes") && (ctlGetVal("N_RelBenPart_main_"+v_i) == "Yes" || varBenRel == "Yes")) {
              
              
                if( (v_DepSSNReq == "Yes") && (ctlGetVal("N_Dependent_main_" + v_i) == "Yes")){
                   if (ctlGetVal("N_DepSSNSIN_main_" + v_i) == "" || ctlGetVal("N_DepSSNSIN_main_" + v_i) == undefined) {
                     v_Return=false;
                     msg("FldRequired", "dataset=main|ctl=" + ctlGetProp("N_DepSSNSIN_main_" + v_i,"title")); 
                   }
                }
              if (ctlGetDef("N_DepBirthDt_main_" + v_i) != null &&v_sBirthDate == "") {
                  v_Return = false;
                  msg("FldRequired", "dataset=main|ctl=" + ctlGetProp("N_DepBirthDt_main_" + v_i,"title"));

               }
               /*  else if (ctlGetDef("N_DepSSNSIN_main_" + v_i) != null && ctlGetVal("N_DepSSNSIN_main_" + v_i) == "") {   
                  v_Return = false;
                  msg("FldRequired", "dataset=main|ctl=" + ctlGetProp("N_DepSSNSIN_main_" + v_i,"title"));
                }  */
                }
                

              v_bNewBenChk = ctlGetVal("N_Beneficiary_main_1");
              v_bOldBenChk = ctlGetVal("O_Beneficiary_main_1");
              if ((v_bNewBenChk == "Yes") && (v_bOldBenChk == "")) {
                ctlSetVal("N_SysSaveStatus_main_1", "1");
              } else if ((v_bNewBenChk != v_bOldBenChk) && (v_bOldBenChk != "")) {
                ctlSetVal("N_SysSaveStatus_main_1", "1");
              } else {
                ctlSetVal("N_SysSaveStatus_main_1", "0");
              }
            }
            v_i++;
          }
          if (ctlGetVal("N_DepHomeEmail_main_1").replace(/[SQROPEN]A-Z0-9[SQRCLOSE]+[SQROPEN]\'\-A-Z0-9_?.?[SQRCLOSE]+[SQROPEN]@[SQRCLOSE][SQROPEN]A-Z0-9[SQRCLOSE]+[SQROPEN]\'\-A-Z0-9_?.?[SQRCLOSE]+[SQROPEN].[SQRCLOSE][SQROPEN]A-Z[SQRCLOSE]+/gi,"").length > 0) {
              msg("IncEmailId1433", "");
              v_Return = false;
          }
          return v_Return;
        }
      ]]>
    </native>
  </event>

  <event name="BeforeNext" where="Client">
    <native lang="JavaScript">
      <![CDATA[
      v_Return = chkDepBnfChg();
      ]]>
    </native>
  </event>

  <event name="BeforePrev" where="Client">
    <native lang="JavaScript">
      <![CDATA[
      v_Return = chkDepBnfChg();
      ]]>
    </native>
  </event>

  <event name="BeforeSave" where="Client">
    <native lang="JavaScript">
      <![CDATA[
      v_Return = chkDepBnfChg();
      ]]>
    </native>
  </event>

  <event name="onClick" ctl="ClearCon" where="Client">
    <native lang="JavaScript">
      <![CDATA[
  if(ctlGetDef("N_HouseNo_main_1") != null )
    ctlSetVal("N_HouseNo_main_1", "");
  if(ctlGetDef("N_DepAddress_main_1") != null )
    ctlSetVal("N_DepAddress_main_1","");
  if(ctlGetDef("N_Address2_main_1") != null )
    ctlSetVal("N_Address2_main_1", "");
  if(ctlGetDef("N_Address3_main_1") != null )
    ctlSetVal("N_Address3_main_1", "");
  if(ctlGetDef("N_DepCity_main_1") != null )
    ctlSetVal("N_DepCity_main_1","");
  if(ctlGetDef("N_DepStateProv_main_1") != null )
    ctlSetVal("N_DepStateProv_main_1","");
  if(ctlGetDef("N_DepZipPostal_main_1") != null )
    ctlSetVal("N_DepZipPostal_main_1","");
  if(ctlGetDef("N_DepCountry_main_1") != null )
    ctlSetVal("N_DepCountry_main_1","");
  if(ctlGetDef("N_DepHomePhone_main_1") != null )
    ctlSetVal("N_DepHomePhone_main_1","");
  if(ctlGetDef("N_PhoneWork_main_1") != null )
    ctlSetVal("N_PhoneWork_main_1","");
  if(ctlGetDef("N_CellPhone_main_1") != null )
    ctlSetVal("N_CellPhone_main_1","");
  if(ctlGetDef("N_DepHomeEmail_main_1") != null )
    ctlSetVal("N_DepHomeEmail_main_1","");
  if(ctlGetDef("N_LocalAddress_main_1") != null )
    ctlSetVal("N_LocalAddress_main_1","");
  if(ctlGetDef("N_LocalAddress2_main_1") != null )
    ctlSetVal("N_LocalAddress2_main_1","");
  if(ctlGetDef("N_LocalAddress3_main_1") != null )
    ctlSetVal("N_LocalAddress3_main_1","");
  if(ctlGetDef("N_LocalCity_main_1") != null )
    ctlSetVal("N_LocalCity_main_1","");        
      ]]>
    </native>
  </event>

  <event name="onChange" ctl="DepRelation" where="Client">
    <native lang="JavaScript">
      <![CDATA[
        var v_iIdx;
        var v_sBenPart;
        var v_sCtl;
        var v_sRel;
        var v_datasource;
        var v_row;
        v_sRel = ctlGetVal(prm_sCtl);
        v_iIdx = prm_sCtl.substring(19);
        v_sCtl = "N_BenPart_main_" + v_iIdx;
        if (ctlGetDef(v_sCtl)) {
          v_sBenPart = "No"
          v_datasource = new NuDatasource();
          v_datasource.setName("RelBenPart");
          v_datasource.setUrlParameter("N_PrmRel", v_sRel);
          v_datasource.open();
          while (v_datasource.next()) {
            v_row = v_datasource.getRow();
            v_sBenPart = v_row.getValue(1);
          }
          v_datasource.close();
          ctlSetVal(v_sCtl, v_sBenPart);
        }
      ]]>
    </native>
  </event>

  <event name="AfterSave" where="Server">
  <!--
    <foreach dataset="main" type="controls">
      <if>
        <when>
          <and>
            <eq>
              <val>[N_Dependent_main_[controlrow]]</val>
              <val>No</val>
            </eq>
            <eq>
              <val>[O_Dependent_main_[controlrow]]</val>
              <val>Yes</val>
            </eq>
          </and>
        </when>
        <then>
          <dataset name="EndEmpBenDep">
            <sql>
              exec ZZEndEmpBenDep '[N_Emp]', '', [N_SysDep_main_[controlrow]], ''
            </sql>
          </dataset>
          <datasetopen dataset="EndEmpBenDep" />
          <datasetclose dataset="EndEmpBenDep"/>
          <commit/>

          <dataset name="EndEmpBenBnf">
            <sql>
              exec ZZEndEmpBenBnf '[N_Emp]', '', [N_SysDep_main_[controlrow]], ''
            </sql>
          </dataset>
          <datasetopen dataset="EndEmpBenBnf" />
          <datasetclose dataset="EndEmpBenBnf"/>
          <commit/>
        </then>
      </if>
    </foreach>
    -->
    <!--
      # 36176-LM-NV - Logic To Execute BenErnElig Workflow To Update Forzen Values And Recalculate Eligibility
      # BenEnrElig workflow is executed form here because benefit recalculations needs to happen with the updated frozen values.
      # Execute BenEnrElig Workflow, When Saved EmpDep.Deprelation = 'Spouse'
    -->
    <!-- Execute Further Logic If F_Wiz = NewHire -->
    <if>
      <!-- Case When F_Wiz = NewHire -->
      <when>
        <eq>
          <val>[F_Wiz]</val>
          <val>NewHire</val>
        </eq>
      </when>
      <then>
        <!-- Initialize Variable VarIdx To 0 -->
        <set var="[VarIdx]">0</set>
        <!-- Initialize Variable VarExecPrc To No -->
        <set var="[VarExecPrc]">No</set>
        <!-- Traverse Through The Rows -->
        <for var="[VarIdx]" from="1" to="[F_RowCnt_main]">
          <!-- When N_DepRelation_main_[VarIdx] = Spouse, Execute BenEnrElig Workflow -->
          <if>
            <!-- Case When N_DepRelation_main_[VarIdx] = Spouse -->
            <when>
              <eq>
                <val>[N_DepRelation_main_[VarIdx]]</val>
                <val>Spouse</val>
              </eq>
            </when>
            <then>
              <!-- Execute Workflow BenEnrElig -->
              <todo wrkflw="BenEnrElig">
                <prm name="N_Emp">[N_Emp]</prm>
                <prm name="N_EnrSum"/>
                <prm name="N_AutoEnrollBen">Yes</prm>
                <prm name="N_BenEnrollment">Yes</prm>
                <prm name="N_PlnTyp" />
                <prm name="N_UpdFrzVal">Yes</prm>
                <prm name="Schedule">No</prm>
              </todo>
            </then>
          </if>
        </for>
      </then>
    </if>
  </event>

  <!-- <event name="AfterSave" where="Server">
    <set var="[FormChanged]">[N_SysSaveStatus_main_1]</set>
    <if>
      <when>
        <eq>
          <val>[FormChanged]</val>
          <val>1</val>
        </eq>
      </when>
      <then>
        <set var="[EmpCde]">[N_Emp_main_1]</set>
        <datasetopen dataset="DelEmpInvBnf"/>
        <foreach dataset="GetInv">
          <set var="[InvName]">[fld_GetInv.Inv]</set>
          <set var="[EmpInvEffDt]">[fld_GetInv.DateCast]</set>
          <foreach dataset="GetBnf">
            <set var="[BnfNum]">[fld_GetBnf.Dep]</set>
            <datasetopen dataset="UpdEmpInvBnf"/>
          </foreach>
        </foreach>
      </then>
    </if>
  </event>

  <dataset name ="GetInv" type="SQLSelect">
    <tables>
      <tbl name="Inv" />
      <tbl name="EmpInv" join="LEFT" to="Inv">
        <eq>
          <fld name="Inv.Inv" />
          <fld name="EmpInv.Inv" />
        </eq>
      </tbl>
    </tables>
    <display>
      <fld name="EmpInv.Inv" />
      <fld name="DateCast">
        <native lang="SQLServer">CONVERT(nVarChar(50), EmpInv.EmpInvEffDt, 101)+' '+CONVERT(nVarChar(50), EmpInv.EmpInvEffDt, 108)</native>
      </fld>
    </display>
    <where>
      <and>
        <eq>
          <fld name="EmpInv.Emp" />
          <val type="String">[EmpCde]</val>
        </eq>
        <eq>
          <fld name="Inv.InvBen" />
          <val type="Number">1</val>
        </eq>
      </and>
    </where>
  </dataset>

  <dataset name="GetBnf" type="SQLSelect">
    <tables>
      <tbl name="EmpDep" />
    </tables>
    <display>
      <fld name="Dep" />
    </display>
    <where>
      <and>
        <eq>
          <fld name="Emp" />
          <val type="String">[EmpCde]</val>
        </eq>
        <eq>
          <fld name="Beneficiary" />
          <val type="Number">1</val>
        </eq>
      </and>
    </where>
  </dataset>

  <dataset name="DelEmpInvBnf">
      <sql>
        DELETE FROM EmpInvBnf WHERE Emp='[EmpCde]'
      </sql>
    </dataset>

    <dataset name="UpdEmpInvBnf">
      <sql>
        INSERT INTO EmpInvBnf(BnfNum, BnfPct, Contingency, Emp, Inv,EmpInvBnfEffDt) VALUES([BnfNum],0,0,'[EmpCde]','[InvName]','[EmpInvEffDt]')
      </sql>
    </dataset> -->

  <dataset name="main" showemptyrecord="No">
    <tables>
      <tbl name="Emp" />
      <tbl name="EmpDep" main="Yes" join="LEFT" to="Emp"><eq><fld name="Emp.Emp" /><fld name="EmpDep.Emp" /></eq></tbl>
      <tbl name="Rel" join="LEFT" to="EmpDep">
        <eq>
          <fld name="Rel.Rel" />
          <fld name="EmpDep.DepRelation" />
        </eq>
      </tbl>
    </tables>
    <display>
      <fld origname="Rel.BenPart" name="RelBenPart" />
      <fld name="EmpDep.*" />
      <fld name="DepPopup">
        <append>
          <fld name="EmpDep.Dep" type="Number" />
          <val> {</val>
          <fld name="EmpDep.DepLastName" type="String" />
          <val>, </val>
          <fld name="EmpDep.DepFirstName" type="String" />
           <val>}</val>
        </append>
      </fld>
      <fld name="DepName">
        <append>
          <fld name="EmpDep.DepFirstName" type="String" />
         <val> </val>
          <fld name="EmpDep.DepLastName" type="String" />
        </append>
      </fld>
      <script name="EmpHeaderFlds" />
    </display>
     <order>
      <fld name="EmpDep.Dep" />
      <fld name="EmpDep.DepLastName" />
      <fld name="EmpDep.DepFirstName" />
    </order>
  </dataset>

<dataset name="EmpDepIdDataset">
<tables>
<tbl name="EmpDep" />
</tables>
<fields>
<fld name="Dep" display="Yes" />
</fields>
<where>
<eq>
<fld name="EmpDepId" />
<val>[F_NavId]</val>
</eq>
</where>
</dataset>
<dataset name="DependentBenefitChk" type="SQLSelect" >
<tables>
<tbl name="EmpBenDep" />
<tbl name="Ben" join="INNER">
<native lang="SQLServer">
<![CDATA[
EmpBenDep.ben =Ben.Ben 
and Ben.BenEndDt>=GETDATE() and Ben.BenEfdDt is null
]]>
</native>
</tbl>
</tables>
<fields>
<fld display="Yes" name="1" />
</fields>
<where>
<and>
<eq>
<fld name="EmpBenDep.Emp" />
<val>[N_Emp_main_1]</val>
</eq>
<eq>
<fld name="EmpBenDep.Dep" />
<val>[N_Emp_Dep_var]</val> 
</eq>
</and>
</where>
</dataset>
  <dataset name="UpdEmpEnrSum">
    <tables>
      <tbl name="EmpEnrSum" main="Yes"/>
      <tbl name="EmpDep" join="LEFT" to="EmpEnrSum"><eq><fld name="EmpDep.Emp" /><fld name="EmpEnrSum.Emp" /></eq></tbl>
    </tables>
    <display>
      <fld name="EmpDep.Emp" />
      <fld name="Relation" origname="EmpDep.DepRelation" />
      <fld name="BirthDate" origname="EmpDep.DepBirthDt" />
      <fld name="EmpEnrSum.*" />
      <fld name="Age">
        <native lang="SQLServer">SELECT DATEDIFF(YY,EmpDep.DepBirthDt,getdate()) - CASE WHEN (MONTH(EmpDep.DepBirthDt) = MONTH(getdate()) AND DAY(EmpDep.DepBirthDt) > DAY(getdate()) OR MONTH(EmpDep.DepBirthDt) > MONTH(getdate())) THEN 1 ELSE 0 END</native>
      </fld>
    </display>
    <where>
      <and>
        <eq>
          <fld name="EmpDep.EmpDepId" />
          <val>[F_Id]</val>
        </eq>
        <eq>
          <fld name="EmpDep.Emp" />
          <val>[N_Emp]</val>
        </eq>
      </and>
    </where>
    <includehistory>Yes</includehistory>
  </dataset>
  <dataset name="prm">
    <tables>
      <tbl name="EmpAdr" main="Yes" />
    </tables>
    <display>
      <fld name="EmpAdr.*" />
    </display>
    <where>
      <and>
        <eq>
          <fld name="EmpAdr.Emp" type="String" />
        <val>[fld_EmpCde]</val>
      </eq>
      <or>
        <eq>
          <val>[F_NavId]</val>
          <val>0</val>
        </eq>
        <eq>
          <val>[F_NavId]</val>
          <val></val>
        </eq>
      </or>
      <eq>
          <fld name="EmpAdr.PrmAdrs" type="YesNo" />
          <val>Yes</val>
        </eq>
      </and>
    </where>
  </dataset>
  <dataset name="ordnum">
    <tables>
      <tbl name="EmpDep" main="Yes" />
    </tables>
    <display>
      <fld name="MaxDep" origname="Max(Dep)" />
    </display>
    <where>
      <eq>
        <fld name="EmpDep.Emp" type="String" />
        <val>[N_Emp]</val>
      </eq>
    </where>
  </dataset>
  <dataset name="RelBenPart">
    <tables>
      <tbl name="Rel" main="Yes" />
    </tables>
    <display>
      <fld name="Rel.BenPart" />
    </display>
    <where>
      <eq>
        <fld name="Rel.Rel" />
        <val>[N_PrmRel]</val>
      </eq>
    </where>
</dataset>
<view name="list">
    <script name="EmpHeaderCtls" />
    <display>
      <title>Employee Contact/Dependents</title>
      <instructions>Add all your contact information including Dependents and
               Emergency Contacts.
               Dependents are eligible to be enrolled in benefits and
               Beneficiaries are listed as such for Investments and life insurance benefits.</instructions>
      <head></head>
      <toolbar><add /><save /></toolbar>
      <body>
        <row><col>[ctl_SysSaveStatus]</col></row>
        <datasheet dataset="main" headers="TOP">
          <script name="EmpDepHeaderGrp" />
          <row>
            <col>[ctl_Lnk1][ctl_Emp][ctl_Dep][ctl_DepFirstName][ctl_DepLastName]</col>
            <col wrap="No">[ctl_DepHomePhone]</col>
            <col>[ctl_DepRelation]</col>
            <col>[ctl_BenPart]</col>
            <col>[ctl_Dependent][ctl_SysDep]</col>
            <col>[ctl_Beneficiary][ctl_RelBenPart]</col>
            <col>[ctl_Contact]</col>
            <col>[ctl_DepBirthDt]</col>
            <col>[ctl_DepSSNSIN]</col>
            <col>[ctl_DepHomeEmail]</col>
          </row>
        </datasheet>
      </body>
    </display>
  </view>
  <view name="edit">
    <script name="EmpHeaderCtls" />
     <display>
      <title>Employee Contact/Dependents</title>
      <instructions>Add all your contact information including Dependents and
               Emergency Contacts.
               Dependents are eligible to be enrolled in benefits and
               Beneficiaries are listed as such for Investments and life insurance benefits. Press Save to submit the changes.</instructions>
      <head></head>
      <toolbar><find /><save /><delete /></toolbar>
      <body>
        <if>
          <when><eq><val>[F_NavId]</val><val>0</val></eq></when>
          <then>
            <foreach dataset="prm">
              <set var="[Address]">[fld_prm.Address]</set>
              <set var="[Address2]">[fld_prm.Address2]</set>
              <set var="[Address3]">[fld_prm.Address3]</set>
              <set var="[City]">[fld_prm.City]</set>
              <set var="[StateProv]">[fld_prm.StateProv]</set>
              <set var="[ZipPostal]">[fld_prm.ZipPostal]</set>
              <set var="[Cty]">[fld_prm.Cty]</set>
              <set var="[PhoneHome]">[fld_prm.PhoneHome]</set>
              <set var="[PhoneWork]">[fld_prm.PhoneWork]</set>
              <set var="[CellPhone]">[fld_prm.CellPhone]</set>
         <set var="[HouseNo]">[fld_prm.HouseNo]</set>
            </foreach>
    
           <set var="[MaxDepNum]">1</set>
            <foreach dataset="ordnum">
              <set var="[MaxDepNum]">
                <plus>
                  <val>[fld_ordnum.MaxDep]</val>
                  <val>1</val>
                </plus>
              </set>
            </foreach>
          </then>
        </if>
        <datasheet dataset="main" headers="OVER" width="100%">
          <script name="EmpHeaderGrp" />
          <row>
            <col>
              <tabset>
                <tab name="General" selected="Yes">
                  <datasheet dataset="main" headers="LEFT" next="No">
                    <hidden>[ctl_Dep][ctl_SysSaveStatus]</hidden>
                    <row><col>[ctl_DepFirstName]</col><col>[ctl_LocalFirstName]</col></row>
                    <row><col>[ctl_DepMiddleName]</col><col>[ctl_LocalMiddleName]</col></row>
                    <row><col>[ctl_DepLastName]</col><col>[ctl_LocalLastName]</col></row>
                    <row><col>[ctl_DepRelation]</col></row>
                    <row><col>[ctl_BenPart][ctl_RelBenPart]</col></row>
                    <row><col>[ctl_Contact]</col></row>
                    <row><col>[ctl_Dependent]</col></row>
                    <row><col>[ctl_Beneficiary]</col></row>
                    <row><col>[ctl_Notes]</col></row>
                  </datasheet>
                </tab>
                <tab name="Contact Info">
                  <v>[ctl_ClearCon]</v>
                  <datasheet dataset="main" headers="LEFT" next="No">
                  <!-- Defect# 1289 INT_NN: Reordering of Address controls starts -->
                    <row><col>[ctl_DepCountry]</col></row>
                    <row><col>[ctl_DepStateProv]</col></row>
          <row><col>[ctl_HouseNo]</col></row>
                    <row><col>[ctl_DepAddress]</col><col>[ctl_LocalAddress]</col></row>
                    <row><col>[ctl_Address2]</col><col>[ctl_LocalAddress2]</col></row>
                    <row><col>[ctl_Address3]</col><col>[ctl_LocalAddress3]</col></row>
                    <row><col>[ctl_DepCity]</col><col>[ctl_LocalCity]</col></row>
                    <row><col>[ctl_DepZipPostal]</col></row>
                  <!-- Defect# 1289 INT_NN: Reordering of Address controls ends -->
                    <row><col>[ctl_DepHomePhone]</col></row>
                    <row><col>[ctl_PhoneWork]</col></row>
                    <row><col>[ctl_CellPhone]</col></row>
                    <row><col>[ctl_DepHomeEmail]</col>
                    </row>
                  </datasheet>
                </tab>
                <tab name="Benefit Info">
                  <datasheet dataset="main" headers="LEFT" next="No">
                    <row><col>[ctl_DepSSNSIN]</col></row>
                    <row><col>[ctl_DepBirthDt]</col></row>
                    <row><col>[ctl_DepGender]</col></row>
                    <row><col>[ctl_DepStudent]</col></row>
                    <row><col>[ctl_DepDisabled]</col></row>
                    <row><col>[ctl_IsSmoker]</col></row>
                    <if xml="Run">
                      <when><ne><val>[F_Application]</val><val>ESS</val></ne></when>
                      <then>
                        <row><col>[ctl_DepCOBRAStatus]</col></row>
                      </then>
                    </if>
                  </datasheet>
                </tab>
        <tab name="User Defined Fields">
                <datasheet dataset="main" headers="LEFT" next="No">
                  <row>
                    <col>[ctl_UDField1]</col>
                  </row>
          <row>
                    <col>[ctl_UDField2]</col>
                  </row>
          <row>
                    <col>[ctl_UDField3]</col>
                  </row>
          <row>
                    <col>[ctl_UDField4]</col>
                  </row>
          <row>
                    <col>[ctl_UDField5]</col>
                  </row>
          <row>
                    <col>[ctl_UDField6]</col>
                  </row>
          <row>
                    <col>[ctl_UDField7]</col>
                  </row>
          <row>
                    <col>[ctl_UDField8]</col>
                  </row>
                  <row>
                    <col>[ctl_UDField9]</col>
                  </row>
                  <row>
                    <col>[ctl_UDField10]</col>
                  </row>                 
                </datasheet>
              </tab>
              </tabset>
            </col>
          </row>
        </datasheet>
      </body>
    </display>
  </view>
<!-- Form: EmpDep Ends -->
