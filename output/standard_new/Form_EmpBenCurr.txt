<!-- Form: EmpBenCurr Starts  -->
  <!-- Script Inclusion Block Starts -->
    <script name="EmpDepCombo" />
    <script name="BenCombo"/>
  <!-- Script Inclusion Block Ends -->
  <!-- Event Handling BLock Starts -->
    <!-- Client Side Event Handling Block Starts -->
<event name="onChange" ctl="SysChangeDedStartDt" where="Client"> 
  <native lang="JavaScript">
    <![CDATA[
      ctlSetVal("N_SysDedStartDt_main_1", ctlGetVal(prm_sCtl));
    ]]>
  </native>
</event>

<event name="onChange" ctl="SysChangeDedStartDtCmbo" where="Client"> 
  <native lang="JavaScript">
    <![CDATA[
      ctlSetVal("N_SysDedStartDt_main_1", ctlGetVal(prm_sCtl));
    ]]>
  </native>
</event>
    
      <event name="global"  where="Client">
        <native lang="Javascript">
          <![CDATA[
            var v_sBenStr = "";
            var v_sCond = "";

            function prereqrul(prm_vBth) {
              var v_sVal = "";
              var v_sCtl = "";
              var v_iCnt = 0;
              var v_i =  0;
              var v_ii = 0;
              var v_iPos = -1;
              var v_iPos1 = 0;
              var v_iPos2 = 0;
              var v_sValNew = "";
              var v_sBenLst = ""; 
              var v_sBenNameLst = ""; 
              var v_sPrqBen = ""; 
              var v_frame = null;
              var v_isIn = 0;
              var v_sTmpBen = "";
              var v_iL = 0;
              var v_iCntL = 0;
              var v_isChosen = false;
              var v_isSave = true;
              var v_obj;
              v_iCnt = ctlGetVal("F_RowCnt_main");
              v_iCntL = ctlGetVal("F_RowCnt_BenLookup");
              v_sBName = "";
              for (v_i = 1; v_i <= v_iCnt; v_i++) {
                v_sBenNameLst = "";
                v_sBenStr = "";
                v_sVal = ctlGetVal("N_SysPrqRul_main_"+v_i);
                v_obj = ctlGetDef("N_Chosen_main_"+v_i);
               // v_isChosen  = v_obj.checked;
               v_isChosen = ctlGetProp("N_Chosen_main_" + v_i, "checked");
                v_sBName = ctlGetVal("N_BenName_main_"+v_i);
                if (v_sVal != "" && v_isChosen) {
                  v_iPos = v_sVal.indexOf("<not>");
                  if (v_iPos < 0) {
                    v_iPos = v_sVal.indexOf("<in>");
                    if (v_iPos >= 0) {
                      v_isIn = 1;
                    }
                  } else {
                      v_isIn = 0;
                  }
                  v_sValNew = v_sVal;
                  while (v_iPos >= 0) {
                    v_iPos = v_sValNew.indexOf("<val>",0);
                    v_iPos1 = v_sValNew.indexOf("<val>",v_iPos);
                    v_iPos2 = v_sValNew.indexOf("</val>",0);
                    v_sPrqBen = v_sValNew.substring(v_iPos+5,v_iPos2);
                    v_sBenLst = v_sBenLst +","+ v_sPrqBen ; 
                    for (v_iL = 1; v_iL <= v_iCntL; v_iL++) {
                      v_sTmpBen = ctlGetVal("N_SysBenCd_BenLookup_"+v_iL);
                      if (v_sTmpBen == v_sPrqBen) {
                        if (v_sBenNameLst =="") {
                          v_sBenNameLst = v_sBenNameLst + "<br>";
                        }
                        v_sBenNameLst = v_sBenNameLst + "'"+ctlGetVal("N_SysBenNm_BenLookup_"+v_iL)+"'";
                        v_sBenNameLst = v_sBenNameLst + "<br>";
                      }
                    }
                    v_sValNew = v_sValNew.substring(v_iPos2+6,v_sValNew.length);
                    v_iPos = v_sValNew.indexOf("<val>",0);
                  }
                  v_isSave = parseBen(v_sVal);
                }
                if (!v_isSave) {
                  v_Return = false;
                  if (v_isIn == 1) {
                    msg("PrqRulIn", "BenList="+v_sBenNameLst+"|Ben="+v_sBName);
                  } else {
                      msg("PrqRulNotIn",  "BenList="+v_sBenNameLst+"|Ben="+v_sBName);
                  }
                  break;
                }
              }
              if (v_isSave) {
                 if (prm_vBth == "Nxt") {
                      cmd("Next");
                 } else if (prm_vBth == "Prv") {
                      cmd("Prev");
                }  else {
                     cmd("Save");
                }
              }
            }

            function parseBen(prm_sBen) {
              var v_Return = false;
              var v_regExp = />\s+</g;
              var v_sBen = null;
              var v_xmlData = null;

              v_sBen = prm_sBen.replace(v_regExp, '><')
              v_xmlData = new NuXml();
              v_xmlData.setByText(v_sBen);

              v_Return = parseBenMain(v_xmlData);
              return v_Return;
            }

            function parseBenMain(prm_objXml) {
              var v_Return = false;
              var v_bIsTrue;
              var v_iIdx;
              var v_iIdxRow;
              var v_iLen;
              var v_iRowCnt;
              var v_obj;
              var v_objNodes;
              var v_sAtr;

              v_iRowCnt = ctlGetVal("F_RowCnt_main");
              if (prm_objXml.getTag().toLowerCase() == "in") {
                v_iLen = prm_objXml.getCount();
                for (v_iIdx = 2; v_iIdx <= v_iLen; v_iIdx++) {
                  for (v_iIdxRow = 1; v_iIdxRow <= v_iRowCnt; v_iIdxRow++) {
                    v_obj = ctlGetDef("N_Chosen_main_" + v_iIdxRow);
                    //v_bIsTrue  = v_obj.checked;
                    v_bIsTrue = ctlGetProp("N_Chosen_main_" + v_iIdxRow, "checked");
                    if (v_bIsTrue) {
                      v_sBen = ctlGetVal("N_SysBen_main_" + v_iIdxRow);
                      if (v_sBen == prm_objXml.getChild(v_iIdx).getContent()) {
                        v_Return = true;
                        break;
                      }
                    }
                  }
                  if (v_Return == true) {
                    break;
                  }
                }
              }
              else {
                if (prm_objXml.getTag().toLowerCase() == "not") {
                  v_Return = parseBenMain(prm_objXml.getChild(1));
                  v_Return = ! v_Return;
                }
                if (prm_objXml.getTag().toLowerCase() == "and") {
                  for (v_iIdx = 1; v_iIdx <= prm_objXml.getCount(); v_iIdx++) {
                    v_Return = true;
                    v_bTmp = parseBenMain(prm_objXml.getChild(v_iIdx));
                    v_Return = v_bTmp && v_Return;
                    if (v_Return == false) {
                      break;
                    }
                  }
                }
                if (prm_objXml.getTag().toLowerCase() == "or") {
                  for (v_iIdx = 1; v_iIdx <= prm_objXml.getCount(); v_iIdx++) {
                    v_Return = false;
                    v_bTmp = parseBenMain(prm_objXml.getChild(v_iIdx));
                    v_Return = v_bTmp || v_Return;
                    if (v_Return == true) {
                      break;
                    }
                  }
                }
              }
              return v_Return;
            }
          ]]>
        </native>
      </event>

      <event name="onClick" ctl="SysChooseNone" where="Client">
        <native lang="JavaScript">
          <![CDATA[
            var v_sVal = "";
            var v_sCtl = "";
            var v_sTyp = "";
            var v_sTypNew = "";
            var v_iCnt = 0;
            var v_i = 0;
            v_iCnt = ctlGetVal("F_RowCnt_main");
            v_sTyp = ctlGetProp(prm_sCtl,"linkdata");
            for (v_i = 1; v_i <= v_iCnt; v_i++) {
              v_sTypNew = ctlGetProp("N_Chosen_main_" + v_i, "grp");
              if (v_sTypNew == v_sTyp) {
                ctlSetVal("N_Chosen_main_" + v_i, "");
              }
            }
          ]]>
        </native>
      </event>

      <event name="onClick" ctl="Save" where="Client">
        <native lang="Javascript">
          <![CDATA[
            prereqrul();
          ]]>
        </native>
      </event>

      <event name="onClick" ctl="Next" where="Client">
        <native lang="Javascript">
          <![CDATA[
            prereqrul("Nxt");
          ]]>
        </native>
      </event>

      <event name="onClick" ctl="Prev" where="Client">
        <native lang="Javascript">
          <![CDATA[
            prereqrul("Prv");
          ]]>
        </native>
      </event>

      <event name="onClick" ctl="ElgLnk1" where="Client">
        <native lang="Javascript">
          <![CDATA[
            url="";
            url=ctlGetProp(prm_sCtl,"linkdata") ;
            if (url.substring(0,4) !="http")  {
               url="http://"+url;
            }
            window.open(url,'Popup','toolbar=no,location=no,directories=no,scrollbars=yes,resizable=yes,copyhistory=no,width=850,height=560');
    ]]>
  </native>
</event>

<event name="onChange" ctl="SysEmpBenElgDedStartDt" where="Client"> 
  <native lang="JavaScript">
    <![CDATA[
      var parts = prm_sCtl.split("_");
      var rownumber = parts[SQROPEN]3[SQRCLOSE];
      ctlSetVal("N_EmpBenElgDedStartDt_main_" + rownumber, ctlGetVal(prm_sCtl));
    ]]>
  </native>
</event>

<event name="onChange" ctl="SysEmpBenElgDedStartDtCmbo" where="Client"> 
  <native lang="JavaScript">
    <![CDATA[
      var parts = prm_sCtl.split("_");
      var rownumber = parts[SQROPEN]3[SQRCLOSE];
      ctlSetVal("N_EmpBenElgDedStartDt_main_" + rownumber, ctlGetVal(prm_sCtl));
    ]]>
  </native>
</event>

<!-- Client Side Event Handling Block Ends -->
<!-- Server Side Event Handling Block Starts -->
<event name="onClick" ctl="RecalElig" where="Server">
  <if xml="Run">
    <when>
      <eq>
        <val>[P_enroll]</val>
        <val>current</val>
      </eq>
    </when>
    <then>
      <set var="[IsEnrollment]">No</set>
      <set var="[AutoEnroll]">Yes</set>
      <set var="[EnrollEffDt]">[N_SysElDate_main_1]</set>
    </then>
    <else>
      <set var="[IsEnrollment]">Yes</set>
      <set var="[AutoEnroll]">No</set>
      <set var="[EnrollEffDt]">[N_SysOEEnrStartDt]</set>
      <set var="[N_SysElDate_main_1]">[N_SysOEEnrStartDt]</set>
    </else>
  </if>
        <dataset name="FindEmpNumber">
          <tables>
            <tbl name="Emp" />
          </tables>
          <display>
            <fld name="Emp.Emp" />
          </display>
          <find>[F_NavPfind]</find>
        </dataset>
        <set var="[var_EmpNumber]"><lookup dataset="FindEmpNumber" /></set>
    <todo wrkflw="BenEnrElig">
      <prm name="N_Emp">[var_EmpNumber]</prm>
      <prm name="N_EnrSum" />
      <prm name="N_AutoEnrollBen">Yes</prm>
      <prm name="N_BenEnrollment">[IsEnrollment]</prm>
      <prm name="N_PlnTyp" />
      <prm name="N_BenEffDt">[EnrollEffDt]</prm>
      <prm name="N_NotifyEmp">[N_SysNotifyEmp]</prm>
      <prm name="N_DedStartDt">[N_SysDedStartDt_main_1]</prm>
  <!-- 36176-LM-NV: Value For Control SysUpdFrzVal Passed Into Workflow To Update Frozen Values -->
      <prm name="N_UpdFrzVal">[N_SysUpdFrzVal_main_1]</prm>
    </todo>
<!-- <msg code="BenElig" /> -->
</event>
<event name="AfterSave" where="Server">
  <datasetopen dataset="BenefitEmail" />
  <datasetnext dataset="BenefitEmail" />
  <set var="[var_BenefitEmail]">[fld_BenefitEmail.ConfigValues]</set>
  <datasetclose dataset="BenefitEmail" />
  <if>
    <when>
      <and>
        <ne>
          <val>[F_Flow]</val>
          <val>Wizards</val>
        </ne>
        <eq>
          <val>[P_enroll]</val>
          <val>current</val>
        </eq>
      </and>
    </when>
    <then>
      <!-- Enroll EmpBenElg records into EmpBen -->
      <empbenenroll>
        <Emp>[N_SysEmpNumber_main_1]</Emp>
        <Action>CREATE_HIST_DEL_AFTER_NOW</Action>
      </empbenenroll>
    </then>
  </if>
  <if>
    <when>
      <eq>
        <val>[var_BenefitEmail]</val>
        <val>Yes</val>
      </eq>
    </when>
    <then>
      <for var="[FldIdx]" from="1" to="[F_RowCnt_main]">
        <if>
          <when>
            <ne>
              <val>[N_Chosen_main_[FldIdx]]</val>
              <val>[O_Chosen_main_[FldIdx]]</val>
            </ne>
          </when>
          <then>
            <set var="[VarBenChange]">Yes</set>
          </then>
        </if>
      </for>
    </then>
  </if>
  <if>
    <when>
      <eq>
        <val>[VarBenChange]</val>
        <val>Yes</val>
      </eq>
    </when>
    <then>
      <todo wrkflw="LtrTodo">
        <prm name="N_letter">Benefits Change</prm>
        <prm name="N_keytbl">EmpBen</prm>
        <prm name="N_keyfld">Emp</prm>
        <prm name="N_keyval">[N_SysEmpNumber_main_1]</prm>
        <prm name="Schedule">No</prm>
      </todo>
    </then>
  </if>
</event>
<event name="onLoad" where="Server">
  <timeout>60000</timeout>
</event>
<!-- Server Side Event Handling Block Ends -->
<!-- Event Handling Block Starts -->
<!-- Dataset Definiton Block Starts -->
<dataset name="BenefitEmail" type="SQLSelect">
  <tables>
    <tbl name="Cfg" />
  </tables>
  <display>
    <fld name="Cfg.*" />
  </display>
  <where>
    <eq>
      <fld name="Cfg" type="String" />
      <val>BenefitEmail</val>
    </eq>
  </where>
</dataset>
<dataset name="BenLookup" type="SQLSelect">
  <tables>
    <tbl name="Ben" main="Yes" />
    <tbl name="EnrSum" join="LEFT" to="Ben">
      <eq>
        <fld name="Ben.EnrSum" />
        <fld name="EnrSum.EnrSum" />
      </eq>
    </tbl>
    <tbl name="EmpEnrSum" join="LEFT" to="EnrSum">
      <eq>
        <fld name="EnrSum.EnrSum" />
        <fld name="EmpEnrSum.EnrSum" />
      </eq>
    </tbl>
    <tbl name="BenPln" join="LEFT" to="Ben">
      <eq>
        <fld name="Ben.BenPln" />
        <fld name="BenPln.BenPln" />
      </eq>
    </tbl>
  </tables>
  <display>
    <fld name="Ben.Ben" />
    <fld name="Ben.BenName" />
    <fld name="BenPln.PlanType" />
  </display>
  <where>
    <script name="EmpBenCurWhrCls" />
  </where>
  <includehistory>Yes</includehistory>
  <distinct>Yes</distinct>
</dataset>
<dataset name="BenUpdate" type="SQLSelect">
  <tables>
    <tbl name="EmpBen" main="Yes" />
  </tables>
  <display>
    <fld name="EmpBen.Emp" />
    <fld name="EmpBen.Ben" />
    <fld name="EmpBen.EmpBenEffDt" />
    <fld name="EmpBen.EmpBenEfdDt" />
    <fld name="EmpBen.EligibleDt" />
  </display>
</dataset>
<dataset name="BenUpdateClose" type="SQLSelect">
  <tables>
    <tbl name="EmpBen" main="Yes" />
    <tbl name="Ben" join="LEFT" to="EmpBen">
      <eq>
        <fld name="Ben.Ben" />
        <fld name="EmpBen.Ben" />
      </eq>
    </tbl>
    <tbl name="BenPln" join="LEFT" to="Ben">
      <eq>
        <fld name="Ben.BenPln" />
        <fld name="BenPln.BenPln" />
      </eq>
    </tbl>
  </tables>
  <display>
    <fld name="EmpBen.Emp" />
    <fld name="EmpBen.Ben" />
    <fld name="EmpBen.EmpBenEffDt" />
    <fld name="EmpBen.EmpBenEfdDt" />
    <fld name="EmpBen.EligibleDt" />
  </display>
  <where>
    <and>
      <eq>
        <fld name="EmpBen.Emp" />
        <val>[N_SysEmpNumber_main_1]</val>
      </eq>
      <eq>
        <fld name="BenPln.PlanType" />
        <val>[N_SysPlnTyp_main_[controlrow]]</val>
      </eq>
      <eq>
        <fld name="Ben.EnrSum" />
        <val>[N_SysEnrSum_main_[controlrow]]</val>
      </eq>
    </and>
  </where>
</dataset>
<!--
      # 47409-LM-NV: Main Dataset Modified To Handle Multiple Eml
      # Eml table added into the dataset to group the records by Eml
      # Condition EmpEnrSum.Emp = Eml.Eml added for multiple Eml
      # Join with PayGrp and Job table added to display in the header
      # Field added to sort the records by Eml.Eml
    -->
    <dataset name="main">
      <tables>
        <tbl name="Emp"/>
    <!-- 47409-LM-NV: Join with Eml table added to goup the records by Eml -->
        <tbl name="Eml" join="LEFT" to="Emp">
          <and>
            <eq>
              <fld name="Emp.Emp"/>
              <fld name="Eml.Emp"/>
            </eq>
            <eq>
              <fld name="Eml.IsPrm" />
              <val>1</val>
            </eq>
            <isnull>
              <fld name="Eml.EmlEfdDt" />
            </isnull>
          </and>
        </tbl>
        <tbl name="EmpBenElg" main="Yes" join="LEFT" to="Eml">
          <and>
            <eq>
              <fld name="Eml.Emp"/>
              <fld name="EmpBenElg.Emp"/>
            </eq>
            <eq>
              <fld name="Eml.Eml"/>
              <fld name="EmpBenElg.Eml"/>
            </eq>
            <isnull>
              <fld name="EmpBenElg.EmpBenElgEfdDt"/>
            </isnull>
          </and>
        </tbl>
        <tbl name="EmpBen" join="LEFT" to="EmpBenElg">
          <and>
            <eq>
              <fld name="EmpBenElg.Emp"/>
              <fld name="EmpBen.Emp"/>
            </eq>
            <eq>
              <fld name="EmpBenElg.Ben"/>
              <fld name="EmpBen.Ben"/>
            </eq>
            <eq>
              <fld name="EmpBenElg.Eml"/>
              <fld name="EmpBen.Eml"/>
            </eq>
            <isnull>
              <fld name="EmpBen.EmpBenEfdDt"/>
            </isnull>
          </and>
        </tbl>
        <tbl name="Ben" join="LEFT" to="EmpBenElg">
          <eq>
            <fld name="Ben.Ben"/>
            <fld name="EmpBenElg.Ben"/>
          </eq>
        </tbl>
        <tbl name="EnrSum" join="LEFT" to="Ben">
          <eq>
            <fld name="Ben.EnrSum"/>
            <fld name="EnrSum.EnrSum"/>
          </eq>
        </tbl>
        <tbl name="BenPln" join="LEFT" to="Ben">
          <eq>
            <fld name="BenPln.BenPln"/>
            <fld name="Ben.BenPln"/>
          </eq>
        </tbl>
        <tbl name="PlnTyp" join="LEFT" to="BenPln">
          <eq>
            <fld name="PlnTyp.PlnTyp"/>
            <fld name="BenPln.PlanType"/>
          </eq>
        </tbl>
    <!-- 47409-LM-NV: Join with PayGrp and Job table added to display in the header -->
        <tbl name="Job" join="LEFT" to="Eml">
          <and>
            <eq>
              <fld name="Eml.Job"/>
              <fld name="Job.Job"/>
            </eq>
            <isnull>
              <fld name="Job.JobEfdDt"/>
            </isnull>
          </and>
        </tbl>
        <tbl name="PayGrp" join="LEFT" to="Eml">
          <and>
            <eq>
              <fld name="Eml.PayGrp"/>
              <fld name="PayGrp.PayGrp"/>
            </eq>
            <isnull>
              <fld name="PayGrp.PayGrpEfdDt"/>
            </isnull>
          </and>
        </tbl>
      </tables>
      <display>
        <fld name="EmpNumber" origname="Emp.Emp" key="Yes"/>
        <fld name="EmpbenElg.*"/>
        <fld name="EnrSum.EnrSum"/>
        <fld name="CurrBen" origname="EmpBen.Ben"/>
        <fld name="EmpBen.EmpBenId"/>
        <fld name="Eml.PayGrp"/>
        <fld name="EmpBen.EmpBenEffDt"/>
        <fld name="PlnTyp.PlnTyp"/>
        <fld name="PlnTyp.PlnOrd"/>
        <fld name="PlnTyp.PlnTypName"/>
        <fld name="PlnTyp.PlnTypDesc"/>
        <fld name="Ben.BenName"/>
        <fld name="Ben.PrqRul"/>
        <fld name="EnrSum.EnrStartDt"/>
        <fld name="EnrSum.EnrEndDt"/>
        <fld name="EnrSum.EnrNum"/>
        <fld name="Ben.BenDesc"/>
        <!-- 36177-LM-NV: Fetch DescLnk from BenPln -->
        <fld name="BenPln.DescLnk"/>
        <fld name="BenPln.InsCar"/>
        <fld name="BenPln.IsAutoEnroll"/>
        <fld name="EmpName">
          <append>
            <fld name="Emp.LastName" type="String"/>
            <val>, </val>
            <fld name="Emp.FirstName" type="String"/>
          </append>
        </fld>
        <!-- Field indicating if this EnrSum,PlnTyp has any default benefits -->
        <fld name="DefaultBenefitExists">
          <dataset name="CheckForDefaultBen">
            <tables>
              <tbl name="DefBen" origname="Ben" />
              <tbl name="DefBenPln" origname="BenPln" join="INNER" to="DefBen" >
                <eq>
                  <fld name="DefBenPln.BenPln" />
                  <fld name="DefBen.BenPln" />
                </eq>
              </tbl>
            </tables>
            <display>
              <fld name="DefPriority" summary="Count" />
            </display>
            <where>
              <and>
                <eq>
                  <fld name="DefBen.EnrSum" />
                  <fld name="Ben.EnrSum" />
                </eq>
                <eq>
                  <fld name="DefBenPln.PlanType" />
                  <fld name="BenPln.PlanType" />
                </eq>
                <not>
                  <isnull>
                    <fld name="DefBen.DefPriority" />
                  </isnull>
                </not>
              </and>
            </where>
          </dataset>
        </fld>
        <script name="EmpHeaderFlds"/>
    <!-- 47409-LM-NV: Fields from Eml table added -->
        <script name="EmlHeaderFlds"/>
      </display>
      <where>
        <and>
          <script name="EmpBenCurWhrCls" />
      <and>
        <le>
          <fld name="isnull(EnrSum.EnrStartDt,'20000101')" type="datetime" />
          <fld name="EmpBenElgEffDt" type="datetime" />
        </le>
        <ge>
          <fld name="isnull(EnrSum.EnrEndDt,'30000101')" type="datetime" />
          <fld name="EmpBenElgEffDt" type="datetime" />
        </ge>
      </and>
      <or>
        <isnull>
          <fld name="Ben.Ben" />
        </isnull>
        <in>
          <fld name="Ben.Ben" />
          <fld name="HasDependents">
            <dataset>
              <tables>
                <tbl name="DepBen" origname="Ben" />
                <tbl name="EmpDep" join="LEFT">
                  <eq>
                    <fld name="Emp.Emp" />
                    <fld name="EmpDep.Emp" />
                  </eq>
                </tbl>
                <tbl name="Rel" join="LEFT" to="EmpDep">
                  <eq>
                    <fld name="Rel.Rel" />
                    <fld name="EmpDep.DepRelation" />
                  </eq>
                </tbl>
                <tbl name="RelCvgLvl" join="LEFT" to="Rel">
                  <and>
                    <eq>
                      <fld name="Rel.Rel" />
                      <fld name="RelCvgLvl.Rel" />
                    </eq>
                    <eq>
                      <fld name="RelCvgLvl.RelCvgLvl" />
                      <fld name="DepBen.PeopleCovered" />
                    </eq>
                  </and>
                </tbl>
              </tables>
              <display>
                <fld name="DepBen.Ben" />
              </display>
              <where>
<!-- INT_SD REQ2233-EM-NV: Code Added To Fetch Data Based On Configeration Value -->
                <if xml="Run">
                  <when>
                    <eq>
                      <val>[cfg_DispAllElgBen]</val>
                      <val>No</val>
                    </eq>
                  </when>
                  <then>
                    <or xml="Keep">
                      <in>
                        <fld name="DepBen.PeopleCovered" />
                        <val />
                        <val>EO</val>
                      </in>
     <!-- Added so that it handles if the code is not EO when configured -->
     <!-- Same condition when there are dependents is present but might have missed when they are not present -->
     <native lang="SQLServer">((Select count(*) FROM EmpDep as DepCount WHERE DepCount.Emp = Emp.Emp AND DepCount.Dependent = 0 AND DepCount.DepRelation IN (Select Rel FROM RelCvgLvl as R2 WHERE R2.RelCvgLvl = RelCvgLvl.RelCvgLvl AND R2.RelCvgLvlEfdDt IS NULL) AND DepCount.EmpDepEfdDt IS NULL) = 0) AND  DepBen.PeopleCovered NOT IN (SELECT RelCvgLvl FROM RelCvgLvl)</native>
                      <and>
                        <eq>
                          <fld name="EmpDep.Dependent" type="YesNo" />
                          <val>Yes</val>
                        </eq>
                        <eq>
                          <fld name="EmpDep.BenPart" type="YesNo" />
                          <val>Yes</val>
                        </eq>
                        <eq xml="Keep">
                          <fld name="RelCvgLvl.RelCvgLvl" />
                          <fld name="DepBen.PeopleCovered" />
                        </eq>
      <!-- AB 10/05/2011 Updated condition to check for number of dependents and the dependent type as well based on the coverage level to display benefits -->
            <!-- AB 09/26/2011 Added condition to check for number of dependents based on the coverage level to display benefits -->
            <native lang="SQLServer">((Select count(*) FROM EmpDep as DepCount WHERE DepCount.Emp = Emp.Emp AND DepCount.Dependent = 1 AND DepCount.DepRelation IN (Select Rel FROM RelCvgLvl as R2 WHERE R2.RelCvgLvl = RelCvgLvl.RelCvgLvl AND R2.RelCvgLvlEfdDt IS NULL) AND DepCount.EmpDepEfdDt IS NULL) >= (SELECT CASE WHEN RelCvgLvl.AllowNumDeps = '1' THEN 1 WHEN RelCvgLvl.AllowNumDeps = '2' THEN 2 WHEN RelCvgLvl.AllowNumDeps = '1+' THEN 1 WHEN RelCvgLvl.AllowNumDeps = '2+' THEN 2 ELSE 0 END))</native>
                      </and>
                    </or>
                  </then>
                  <else>
                    <eq xml="Keep">
                      <val>1</val>
                      <val>1</val>
                    </eq>
                  </else>
                </if>
              </where>
            </dataset>
          </fld>
        </in>
      </or>
    </and>
  </where>
  <includehistory>Yes</includehistory>
  <order>
    <fld name="EmpbenElg.Emp" />
    <fld name="Ben.EnrSum" />
<!-- 47409-LM-NV: Added to sort the records based on Eml -->
    <fld name="EmlVal" />
    <fld name="PlnTyp.PlnOrd" />
    <fld name="PlnTyp.PlnTyp" />
    <fld name="EmpbenElg.Ben" />
  </order>
</dataset>
<!-- CfgValue dataset added for event REQ-725 -->
<dataset name="CfgValue">
  <tables>
    <tbl name="Cfg" />
  </tables>
  <display>
    <fld name="Cfg.*" />
  </display>
  <where>
    <eq>
      <fld name="Cfg" />
      <val>[var_Cfg]</val>
    </eq>
  </where>
</dataset>
<!-- Dataset Defintion Block Ends -->
<!-- View Definiton Block Starts -->
<view name="list">
<!-- Include Header Control Definitions -->
  <script name="EmpHeaderCtls" />
<!-- 47409-LM-NV: Eml Header Controls script added -->
  <script name="EmlHeaderCtls" />
<!-- Form Display Logic Starts -->
  <display>
    <title>
      <if>
        <when>
          <eq>
            <val>[P_enroll]</val>
            <val>current</val>
          </eq>
        </when>
        <then>Employee Current Benefits</then>
        <else>Employee Open Enrollment Benefits</else>
      </if>
    </title>
    <instructions>Choose a Benefit</instructions>
    <head />
    <toolbar>
      <save />
    </toolbar>
    <body>
<!-- Form Display Logic Starts -->
<!-- Set Variables -->
      <set var="[PreReqRul]">No</set>
      <set var="[ExtraColumns]">3</set>
      <!-- Logic added for event REQ-725 -->
      <set var="[var_Cfg]">DedDateDsp</set>
      <set var="[var_DedDateDsp]">No</set>
      <datasetopen dataset="CfgValue" />
      <datasetnext dataset="CfgValue" />
      <set var="[var_DedDateDsp]">[fld_CfgValue.ConfigValues]</set>
      <datasetclose dataset="CfgValue" />
      <set var="[var_Cfg]">PayEffectiveDt</set>
      <set var="[var_PayEffectiveDt]"></set>
      <datasetopen dataset="CfgValue" />
      <datasetnext dataset="CfgValue" />
      <set var="[var_PayEffectiveDt]">[fld_CfgValue.ConfigValues]</set>
      <datasetclose dataset="CfgValue" />
      <!-- End of logic addition for event REQ-725 -->
    <!-- Display Controls Using Main Dataset Starts -->
    <datasheet dataset="main" headers="LEFT" next="No">
        <groups>
          <groupby val="[fld_EmpNumber]">
            <header>
              <row>
                <col>[ctl_EmpName]</col>
                <col>[ctl_ProfilePopup]</col>
              </row>
            </header>
          </groupby>
        </groups>
      </datasheet>
      <datasheet dataset="main" headers="TOP" showlinecount="No">
<!-- Include Header Controls -->
        <groups>
          <groupby val="[fld_EmpNumber]">
            <header>      
              <if>
                <when>
                  <and>
                    <ne>
                      <val>[F_Flow]</val>
                      <val>Wizards</val>
                    </ne>
                    <ne>
                      <val>[F_Application]</val>
                      <val>ESS</val>
                    </ne>
                  </and>
                </when>
                <then>
                  <row>
                    <col span="3">
                      <datasheet dataset="main" headers="LEFT" next="No" title="Recalculate">
<!-- <hidden>[ctl_EnrSumHdn]</hidden> -->
                        <row>
                          <if xml="Run">
                            <when>
                              <eq>
                                <val>[P_enroll]</val>
                                <val>current</val>
                              </eq>
                            </when>
                            <then>
                              <col>[ctl_SysElDate]</col>
                              <col>
                                [ctl_SysDedStartDt]
                                <if>
                                  <when>
                                    <eq>
                                      <val>[var_DedDateDsp]</val>
                                      <val>Yes</val>
                                    </eq>
                                  </when>
                                  <then>
                                    <if>
                                      <when>
                                        <eq>
                                          <val>[var_PayEffectiveDt]</val>
                                          <val>Cort2</val>
                                        </eq>
                                      </when>
                                      <then>
                                       [ctl_SysChangeDedStartDtCmbo]
                                      </then>
                                      <else>
                                      [ctl_SysChangeDedStartDt]
                                      </else>
                                    </if>
                                  </then>
                                </if>
                              </col>
                            </then>
                          </if>
                          <col>[ctl_SysNotifyEmp][ctl_SysEmpNumber]</col>
<!-- 36176-LM-NV: SysUpdFrzVal Control Added -->
                          <col>[ctl_SysUpdFrzVal]</col>
                          <col>[ctl_RecalElig][ctl_SysOEEnrStartDt]</col>
                        </row>
                      </datasheet>
                    </col>
                  </row>
                </then>
              </if>
            </header>
          </groupby>
          <groupby val="[fld_EnrSum]">
            <if>
              <when>
                <and>
                  <ne>
                    <val>[fld_EnrSum]</val>
                    <val />
                  </ne>
                  <ne>
                    <val>[fld_PlnTyp]</val>
                    <val />
                  </ne>
                </and>
              </when>
              <then>
                <header>
                  <row>
                    <col span="2">[ctl_EnrSum]</col>
                  </row>
                </header>
              </then>
            </if>
          </groupby>
          <!-- 
            # 47409-LM-NV: Groupby Eml header for benefit screens added
          -->
          <script name="BenFrmEmlHdrGrp" />
          <groupby val="[fld_PlnTyp]">
            <if>
              <when>
                <ne>
                  <val type="String">[fld_PlnTyp]</val>
                  <val/>
                </ne>
              </when>
              <then>
                <header>
                  <row>
                    <col>[ctl_PlnTypName]</col>
                    <if>
                      <when>
                        <or>
                          <gt>
                            <val>[fld_main.DefaultBenefitExists]</val>
                            <val>0</val>
                          </gt>
                          <eq>
                            <val>[fld_main.IsAutoEnroll]</val>
                            <val>Yes</val>
                          </eq>
                        </or>
                      </when>
                      <then>
                        <!-- Do not show the clear button if at least one default benefit exists for this EnrSum,PlnTyp-->
                      </then>
                      <else>
                        <col>[ctl_SysChooseNone]</col>
                      </else>
                    </if>
                  </row>
                  <if when="[fld_PlnTypDesc]">
                    <row>
                      <col span="2">[ctl_PlnTypDesc]</col>
                    </row>
                  </if>
                </header>
              </then>
            </if>
          </groupby>
        </groups>
            <!--
              # When main.PlnTyp Is Not Null,
                $ Execute Further Logic To Display Rows
                $ Set NoEnrollments = Yes
              # Else, NoEnrollments = No
            -->
            <if>
              <!-- Case When main.PlnTyp Is NULL -->
              <when>
                <ne>
                  <val type="String">[fld_PlnTyp]</val>
                  <val/>
                </ne>
              </when>
              <then>
                <!-- Execute Further Logic To Display Rows -->
                <row>
                  <col>
                    <!--
                      # When main.IsEligible = Yes, Display Control Chosen
                      # Else, Display Control SysInEligible
                      # Display Controls SysEmpBenEffDt, SysEligibleDt, SysBen, SysEnrSum, SysPlnTyp
                    -->
                    <if>
                      <!-- Case When main.IsEligible = Yes -->
                      <when>
                        <eq>
                          <val type="YesNo">[fld_IsEligible]</val>
                          <val>Yes</val>
                        </eq>
                      </when>
                      <then>[ctl_Chosen]</then>
                      <else>[ctl_SysInEligible]</else>
                    </if>[ctl_SysEmpBenEffDt][ctl_SysEligibleDt][ctl_SysBen][ctl_SysEnrSum][ctl_SysPlnTyp] 
                  </col>
                  <!--
                    # Display Control BenName
                    # When main.DescLnk Is Not NULL, Display Control ElgLmk1 In The Next Line
                  -->
                  <col>[ctl_BenName]
                    <if when="[fld_DescLnk]">
                      <blankline />[ctl_ElgLnk1]
                    </if>
                    <!-- When main.Ben = main.CurBen, Display Control SysCurrElect In The Next Line -->
                    <if>
                      <when>
                        <eq>
                          <val>[fld_Ben]</val>
                          <val>[fld_CurrBen]</val>
                        </eq>
                      </when>
                      <then>
                        <blankline />[ctl_SysCurrElect]
                      </then>
                    </if>
                  </col>
                  <!-- 36176-LM-NV: Display Controls EmpBenElgEffDt, EmpBenElgDedStartDt, EmpBenDedEndDt, EligibleDt, InsCar -->
                  <!-- regardless of OE or current, EmpBenElg.EmpBenElgEffDt contains the correct value to show -->
                   <if>
                     <when>
                      <and>
                        <eq>
                          <val>[F_Flow]</val>
                          <val>Wizards</val>
                        </eq>
                        <eq>
                          <val>[F_Application]</val>
                          <val>ESS</val>
                        </eq>
                       </and>
                     </when>
                    <then>
                       <set var="[var_ESSReadOnly]">Yes</set>
                    </then>
                  </if>
                  <col>[ctl_EmpBenElgEffDt]</col>
                  <!-- REQ#725-LM-NV: Logic Added To Display Controls DedDateDsp configuration value is Yes -->
                  <if>
                    <when>
                      <eq>
                        <val>[var_DedDateDsp]</val>
                        <val>Yes</val>
                      </eq>
                    </when>
                    <then>
                      <if>
                        <when>
                          <eq>
                            <val>[var_PayEffectiveDt]</val>
                            <val>Cort2</val>
                          </eq>
                        </when>
                        <then>
                          <col>[ctl_SysEmpBenElgDedStartDtCmbo][ctl_EmpBenElgDedStartDt]</col>
                        </then>
                        <else>
                          <col>[ctl_SysEmpBenElgDedStartDt][ctl_EmpBenElgDedStartDt]</col>
                        </else>
                      </if>
                      
                      <col>[ctl_EmpBenElgDedEndDt]</col>
                    </then>
                  </if>

                  <if>
                    <when>
                      <or>
                        <eq>
                          <val>[var_PayEffectiveDt]</val>
                          <val>Cort</val>
                        </eq>
                        <eq>
                          <val>[var_PayEffectiveDt]</val>
                          <val>Nuview</val>
                        </eq>
                      </or>
                    </when>
                    <then>
                      <col>[ctl_EmpBenElgPayEffectiveDt]</col>
                    </then>
                  </if>
                  <!-- End of logic for event REQ-725 -->
                  <col>[ctl_EligibleDt]</col>
                  <col>[ctl_InsCar]</col>
                  <!--
                    # When main.CmpPrem Is Greater Than 0,
                      $ Set variable ExtraColumns = ExtraColumns - 1
                      $ Display Control CmpPrem
                  -->
          <!-- commenting this code to display CmpPrem,EmpPrem,EmpPayPdDed fields even if they have not greater than 0 value -->
                  <!-- <if>
                     Case When main.CmpPrem Is Greater Than 0
           <when>
                      <gt>
                        <val>[fld_main.CmpPrem]</val>
                        <val>0</val>
                      </gt>
                    </when> 
                    <then> -->
<!-- Set Variable ExtraColumns -->
                  <set var="[ExtraColumns]">
                    <minus>
                      <val>[ExtraColumns]</val>
                      <val>1</val>
                    </minus>
                  </set>
<!-- Display Control CmpPrem -->
                  <col align="RIGHT">[ctl_CmpPrem]</col>
                    <!-- </then>
          </if> -->
<!--
                    # When main.EmpPrem Is Greater Than 0,
                      $ Set variable ExtraColumns = ExtraColumns - 1
                      $ Display Control EmpPrem
                  -->
                  <!-- <if>
                     Case When main.EmpPrem Is Greater Than 0 
                    <when>
                      <and>
                        <gt>
                          <val>[fld_main.EmpPrem]</val>
                          <val>0</val>
                        </gt>
                      </and>
                    </when>
                    <then> -->
<!-- Set Variable ExtraColumns -->
                  <set var="[ExtraColumns]">
                    <minus>
                      <val>[ExtraColumns]</val>
                      <val>1</val>
                    </minus>
                  </set>
<!-- Display Control CmpPrem -->
                  <col align="RIGHT">[ctl_EmpPrem]</col>
                   <!-- </then>
                  </if>-->
                  <!-- REQ 1100-SLC-NV display PayrollDeduction instead of EmpPayPdDed -->
                  <!--
                    # When main.PayrollDeduction Is Greater Than 0,
                      $ Set variable ExtraColumns = ExtraColumns - 1
                      $ Display Control PayrollDeduction
                  -->
                 <!-- <if>
                    Case When main.PayrollDeduction Is Greater Than 0 
                    <when>
                      <and>
                        <gt>
                          <val>[fld_main.PayrollDeduction]</val>
                          <val>0</val>
                        </gt>
                      </and>
                    </when>
                    <then> -->
<!-- Set Variable ExtraColumns -->
                  <set var="[ExtraColumns]">
                    <minus>
                      <val>[ExtraColumns]</val>
                      <val>1</val>
                    </minus>
                  </set>
<!-- Display Control PayrollDeduction -->
                  <col align="RIGHT">[ctl_PayrollDeduction]</col>
                    <!-- </then>
                  </if> -->
<!--
                    # When main.FlexCredits Is Greater Than 0,
                      $ Set variable ExtraColumns = ExtraColumns - 1
                      $ Display Control FlexCredits
                  -->
                  <if>
                    <!-- Case When main.FlexCredits Is Greater Than 0 -->
                    <when>
                      <and>
                        <gt>
                          <val>[fld_main.FlexCredits]</val>
                          <val>0</val>
                        </gt>
                      </and>
                    </when>
                    <then>
                      <!-- Set Variable ExtraColumns -->
                      <set var="[ExtraColumns]">
                        <minus>
                          <val>[ExtraColumns]</val>
                          <val>1</val>
                        </minus>
                      </set>
                      <!-- Display Control FlexCredits -->
                      <col align="RIGHT">[ctl_FlexCredits]</col>
                    </then>
                  </if>
                  <!--
                    # When ExtraColumns Is Greater Than 0, Then Display Column With span =ExtraColumns
                  -->
                  <if>
                    <when>
                      <gt>
                        <val>[ExtraColumns]</val>
                        <val>0</val>
                      </gt>
                    </when>
                    <then>
                      <col span="[ExtraColumns]"/>
                    </then>
                  </if>
                  <!-- Display Control SysPrqRul -->
                  <col>[ctl_SysPrqRul]</col>
                  <!-- When PreReqRul = No And main.PrqRul Is Not NULL, Set Variable PreReqRul = Yes -->
                  <if>
                    <!-- Case When PreReqRul = No And main.PrqRul Is Not NULL -->
                    <when>
                      <and>
                        <eq>
                          <val>[PreReqRul]</val>
                          <val>No</val>
                        </eq>
                        <ne>
                          <val>[fld_main.PrqRul]</val>
                          <val/>
                        </ne>
                      </and>
                    </when>
                    <then>
                      <!-- Set Variable PreReqRul = Yes -->
                      <set var="[PreReqRul]">Yes</set>
                    </then>
                  </if>
                </row>
                <!-- Set Variable NoEnrollments = No -->
                <set var="[NoEnrollments]">No</set>
              </then>
              <else>
                <!-- Set Variable NoEnrollments = Yes -->
                <set var="[NoEnrollments]">Yes</set>
              </else>
            </if>
          </datasheet>
          <!-- Display Controls Using Main Dataset Ends -->
          <!-- When NoEnrollments = Yes, Display Not Eligible Statement -->
          <if when="[NoEnrollments]">
            <v>Employee does not have any Eligible or Active Benefits</v>
          </if>
          <!--   <if when="[PreReqRul]">-->
          <!-- When PreReqRul = Yes, Display Controls SysBenCd, SysBenNm, SysBenPt -->
          <if>
            <!-- Case When PreReqRul = Yes -->
            <when>
              <eq>
                <val>[PreReqRul]</val>
                <val>Yes</val>
              </eq>
            </when>
            <then>
              <!-- Display Controls Using BenLookup -->
              <datasheet dataset="BenLookup" headers="LEFT" showlinecount="No">
                <row>
                  <col>[ctl_SysBenCd]</col>
                </row>
                <row>
                  <col>[ctl_SysBenNm]</col>
                </row>
                <row>
                  <col>[ctl_SysBenPt]</col>
                </row>
              </datasheet>
            </then>
          </if>
        </body>
      </display>
    </view>
  <!-- View Definiton Block Ends -->
<!-- Form: EmpBenCurr Ends -->
