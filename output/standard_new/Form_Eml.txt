<!-- Form: Eml Start -->
  <!-- Script Inclusion Block Start -->
  <script name="ActEvtTrm" />
  <script name="CpsCombo" />
  <script name="EmlOnChgPos" />
  <script name="OnChangeEvt" />
  <script name="SalaryCombo" />
  <script name="StatusCombo" />
  <script name="TimCrdGrpCombo" />
  <script name="EntCombo" />
  <script name="ReviewCombo" />
  <script name="BenCombo" />
  <!-- Script Inclusion Block Ends -->
  <!-- Server Side Event Handling Block Start -->
    <event name="beforefind" where="Server">
      <if>
        <when>
          <and>
            <eq>
              <val>[F_Mode]</val>
              <val>popupfind</val>
            </eq>
            <ne>
              <val>[F_PopupPrm]</val>
              <val />
            </ne>
          </and>
        </when>
        <then>
          <set var="[N_Emp_main_1]">
            <val>[F_PopupPrm]</val>
          </set>
        </then>
      </if>
    </event>

    <event name="AfterSave" where="Server">
           <if>
            <when>
              <and>
	            <eq>
	              <val>[N_SysDelRec_main_1]</val>
	              <val>No</val>
	            </eq>
                <eq>
                  <val>[N_SalPer_main_1]</val>
                  <val>C</val>
                </eq>
                <or>
                  <ne>
                    <val>[O_SalPer_main_1]</val>
                    <val>[N_SalPer_main_1]</val>
                  </ne>
                  <ne>
                    <val>[O_SalEffDt_main_1]</val>
                    <val>[N_SalEffDt_main_1]</val>
                  </ne>
                  <ne>
                    <val>[O_SalEndDt_main_1]</val>
                    <val>[N_SalEndDt_main_1]</val>
                  </ne>
                </or>
              </and>
            </when>
            <then>
              <if>
                <when>
                  <eq>
                    <val>[N_SysIsSalEffCmb_main_1]</val>
                    <val>Yes</val>
                  </eq>
                </when>
                <then>
                  <set var="[VarPayCalStDt]">
                    <convert>
                      <orig>[N_SalEffDt_main_1]</orig>
                      <from>String</from>
                      <to>Date</to>
                    </convert>
                  </set>
                </then>
                <else>
                  <!-- A dataset with PayCalStDt just after entered start date -->
                  <set var="[var_SalEffDt]">
                    <convert>
                      <orig>[N_SalEffDt_main_1]</orig>
                      <from>String</from>
                      <to>Date</to>
                    </convert>
                  </set>
                  <datasetopen dataset="PayCalStDt" />
                  <datasetnext dataset="PayCalStDt" />
                  <if>
                    <when>
                      <ne>
                        <val>[fld_PayCalStDt.PayCalId]</val>
                        <val />
                      </ne>
                    </when>
                    <then>
                      <set var="[VarPayCalStDt]">[fld_PayCalStDt.PayCalStDt]</set>
                    </then>
                  </if>
                  <datasetclose dataset="PayCalStDt" />
                </else>
              </if>
              <if>
                <when>
                  <eq>
                    <val>[N_SysIsSalEndCmb_main_1]</val>
                    <val>Yes</val>
                  </eq>
                </when>
                <then>
                  <set var="[VarPayCalEndDt]">
                    <convert>
                      <orig>[N_SalEndDt_main_1]</orig>
                      <from>String</from>
                      <to>Date</to>
                    </convert>
                  </set>
                </then>
                <else>
                  <!-- A dataset with PayCalEndDt just after entered end date -->
                  <set var="[var_SalEndDt]">
                    <convert>
                      <orig>[N_SalEndDt_main_1]</orig>
                      <from>String</from>
                      <to>Date</to>
                    </convert>
                  </set>
                  <datasetopen dataset="PayCalEndDt" />
                  <datasetnext dataset="PayCalEndDt" />
                  <if>
                    <when>
                      <ne>
                        <val>[fld_PayCalEndDt.PayCalId]</val>
                        <val />
                      </ne>
                    </when>
                    <then>
                      <set var="[VarPayCalEndDt]">[fld_PayCalEndDt.PayCalEndDt]</set>
                    </then>
                  </if>
                  <datasetclose dataset="PayCalStDt" />
                </else>
              </if>
              <datasetopen dataset="GetExpPayPd" />
              <datasetnext dataset="GetExpPayPd" />
                <set var="[VarPdWk]">[fld_GetExpPayPd.Weeks]</set>
                <set var="[VarPdBW]">[fld_GetExpPayPd.Biweeks]</set>
                <set var="[VarPdSM]">[fld_GetExpPayPd.Semimonths]</set>
                <set var="[VarPdMn]">[fld_GetExpPayPd.Months]</set>
              <datasetclose dataset="GetExpPayPd" />
              <if>
                <when>
                  <eq>
                    <val>[N_PayPer_main_1]</val>
                    <val>W</val>
                  </eq>
                </when>
                <then>
                  <set var="[VarExpPayPd]">[VarPdWk]</set>
                </then>
                <when>
                  <eq>
                    <val>[N_PayPer_main_1]</val>
                    <val>B</val>
                  </eq>
                </when>
                <then>
                  <set var="[VarExpPayPd]">[VarPdBW]</set>
                </then>
                <when>
                  <eq>
                    <val>[N_PayPer_main_1]</val>
                    <val>S</val>
                  </eq>
                </when>
                <then>
                  <set var="[VarExpPayPd]">[VarPdSM]</set>
                </then>
                <when>
                  <eq>
                    <val>[N_PayPer_main_1]</val>
                    <val>M</val>
                  </eq>
                </when>
                <then>
                  <set var="[VarExpPayPd]">[VarPdMn]</set>
                </then>
              </if>
              <if>
                <when>
                  <eq>
                    <val>[F_Id_main_1]</val>
                    <val>0</val>
                  </eq>
                </when>
                <then>
                  <set var="[EmlId]">[datasetinfo_main.RangeStart]</set>
                </then>
                <else>
                  <set var="[EmlId]">[F_Id_main_1]</set>
                </else>
              </if>
              <update dataset="UpdEmlPayPd">
                <data>
                  <row>
                    <fld name="ExpPayPd">[VarExpPayPd]</fld>
                  </row>
                </data>
              </update>
            </then>
          </if>
           <if>
             <when>
               <isnull>
        		<val>[N_TimCrdGrp_main_1]</val>
      		   </isnull>
    		 </when>
    		 <then>
      		   <set var="[VarEmpDfTsCde]">
          	   <append>
            	 <val>[N_Emp_main_1]</val>
            	 <val>-</val>
            	 <val>[N_Eml_main_1]</val>
          	   </append>
      		   </set>
      		   <delete dataset="DelEmpDfTSDtl" />
               <delete dataset="CurrentDfTs" />
             </then>
           </if>
           <if>
             <when>
               <ne>
                 <val>[O_TimCrdGrp_main_1]</val>
                 <val>[N_TimCrdGrp_main_1]</val>
               </ne>
             </when>
             <then>
               <delete dataset="CurrentDfTs" />
               <todo wrkflw="GenerateDfTsTmp">
                 <prm name="N_Emp">[N_Emp_main_1]</prm>
                 <prm name="N_Eml">[N_Eml_main_1]</prm>
                 <prm name="Schedule">No</prm>
               </todo>
             </then>
           </if>
    </event>

    <event name="BeforeDelete" where="Server">
      <datasetopen dataset="DelEml"/>
      <datasetnext dataset="DelEml"/>
      <set var="[varEmlEfdDt]">[fld_DelEml.EmlEfdDt]</set>
      <datasetclose dataset="DelEml"/>
      <if>
        <when>
          <eq>
            <val>[varEmlEfdDt]</val>
            <val></val>
          </eq>
        </when>
        <then>
          <datasetopen dataset="DelEmlCur" />
          <datasetclose dataset="DelEmlCur"/>
          <commit/>
          <cancelevent/>
        </then>
      </if>
    </event>

    <event name="beforeSave" where="Server">
      <datasetopen dataset="main"/>
      <datasetnext dataset="main"/>
        <set var="[varEmp]">[N_Emp_main_1]</set>
        <set var="[varIsPrm]">[N_IsPrm_main_1]</set>
        <set var="[varEml]">[O_Eml_main_1]</set>
        <set var="[varNewEmlEffDt]">[N_EmlEffDt_main_1]</set>
        <set var="[varOldEmlEffDt]">[O_EmlEffDt_main_1]</set>
      <datasetclose dataset="main"/>
      <datasetopen dataset="FchEmlEfdDt"/>
      <datasetnext dataset="FchEmlEfdDt"/>
        <set var="[varEmlId]">[fld_FchEmlEfdDt.EmlId]</set>
      <datasetclose dataset="FchEmlEfdDt"/>
      <datasetopen dataset="CntHstReq"/>
      <datasetnext dataset="CntHstReq"/>
        <set var="[varNoOfHstRec]">[fld_CntHstReq.NoOfHstRec]</set>
      <datasetclose dataset="CntHstReq"/>
      <if>
        <when>
          <and>
            <eq>
              <val>[varIsPrm]</val>
              <val>Yes</val>
            </eq>
            <eq>
              <val>[F_CmdLast]</val>
              <val>Copy</val>
            </eq>
          </and>
        </when>
        <then>
          <foreach dataset="main">
            <if>
              <when>
                <ne>
                  <val>[varEml]</val>
                  <val>[N_Eml_main_1]</val>
                </ne>
              </when>
              <then>
                <update dataset="Primary">
                  <data>
                    <row>
                      <fld name="IsPrm">No</fld>
                    </row>
                  </data>
                </update>
              </then>
            </if>
          </foreach>
       </then>
       </if>
    </event>
  <!-- Server Side Event Handling Block Ends -->

  <!-- Client Side Event Handling Block Starts -->
    <event name="global" where="Client" view="edit">
      <native lang="JavaScript">
        <![CDATA[
          /**
           * makeDisableById
           */
          function makeDisableById (prm_sId) {
            if (prm_sId) {
              ctlSetProp(prm_sId, "readOnly", true);
            }
          }

          /**
           * makeEnabledById
           *  Note: We have used the ".readOnly" attribute here explicitely with using ctlSetProp,
           *  because ctlSetProp doesn't support the same in FireFox.
           */
          function makeEnabledById (prm_sId) {
            if (prm_sId) {
              ctlGetDef(prm_sId).readOnly = false;
            }
          }
          /**
           * makeAllfieldsEditable
           *  This code is written to enable all the readonly Controls
           *  0 means all the bits are false
           */
          function makeAllfieldsEditable () {
            setCtlPrp(0);
          }

          /**
           *REQ#1248-SLC-NV: Function Modified To Use NuCtlCurrency Object
           *setCtlPrp
           *This will convert the control to the read only / editable mode based on the settings passed in the parameter
           *@prm_iSetting: This will be a binary number.
           */
          function setCtlPrp(prm_iSetting) {
            if (prm_iSetting & 128) {
              if (ctlGetDef("N_AnnlSal_main_1")) {
                NuCtlCurrency.setProperty("N_AnnlSal_main_1", "readonly", "Yes");
              }
            } else {
              if (ctlGetDef("N_AnnlSal_main_1")) {
                NuCtlCurrency.setProperty("N_AnnlSal_main_1", "readonly", "No");
              }
            }
            if (prm_iSetting & 64) {
              if (ctlGetDef("N_MnthSal_main_1")) {
                NuCtlCurrency.setProperty("N_MnthSal_main_1", "readonly", "Yes");
              }
            } else {
              if (ctlGetDef("N_MnthSal_main_1")) {
                NuCtlCurrency.setProperty("N_MnthSal_main_1", "readonly", "No");
              }
            }
            if (prm_iSetting & 32) {
              if (ctlGetDef("N_SemiSal_main_1")) {
                NuCtlCurrency.setProperty("N_SemiSal_main_1", "readonly", "Yes");
              }
            } else {
              if (ctlGetDef("N_SemiSal_main_1")) {
                 NuCtlCurrency.setProperty("N_SemiSal_main_1", "readonly", "No");
              }
            }
            if (prm_iSetting & 16) {
              if (ctlGetDef("N_BiWkSal_main_1")) {
                NuCtlCurrency.setProperty("N_BiWkSal_main_1", "readonly", "Yes");
              }
            } else {
              if (ctlGetDef("N_BiWkSal_main_1")) {
                NuCtlCurrency.setProperty("N_BiWkSal_main_1", "readonly", "No");
              }
            }
            if (prm_iSetting & 8) {
              if (ctlGetDef("N_WklySal_main_1")) {
                NuCtlCurrency.setProperty("N_WklySal_main_1", "readonly", "Yes");
              }
            } else {
              if (ctlGetDef("N_WklySal_main_1")) {
                NuCtlCurrency.setProperty("N_WklySal_main_1", "readonly", "No");
              }
            }
            if (prm_iSetting & 4) {
              if (ctlGetDef("N_DalySal_main_1")) {
                NuCtlCurrency.setProperty("N_DalySal_main_1", "readonly", "Yes");
              }
            } else {
              if (ctlGetDef("N_DalySal_main_1")) {
                NuCtlCurrency.setProperty("N_DalySal_main_1", "readonly", "No");
              }
            }
            if (prm_iSetting & 2) {
              if (ctlGetDef("N_HrlySal_main_1")) {
                NuCtlCurrency.setProperty("N_HrlySal_main_1", "readonly", "Yes");
              }
            } else {
              if (ctlGetDef("N_HrlySal_main_1")) {
                NuCtlCurrency.setProperty("N_HrlySal_main_1", "readonly", "No");
              }
            }
          }

          /**
           *setCtlPrpVal
           *This will set the parameter value for setCtlPrp function based on value passed by parameters.
           *@prm_sSalPer: This will be a Character.
           *@prm_sPayPer: This will be a Character.
           */
          function setCtlPrpVal(prm_sSalPer, prm_sPayPer) {
            var v_sSalPer;
            var v_sPayPer;
            v_sSalPer = prm_sSalPer;
            v_sPayPer = prm_sPayPer;
            if (v_sSalPer == "C") {
              switch(v_sPayPer) {
                case "W":
                  v_iSetting = 8;
                  setCtlPrp(v_iSetting);
                  break;
                case "B":
                  v_iSetting = 16;
                  setCtlPrp(v_iSetting);
                  break;
                case "S":
                  v_iSetting = 32;
                  setCtlPrp(v_iSetting);
                  break;
                case "M":
                  v_iSetting = 64;
                  setCtlPrp(v_iSetting);
                  break;
                default :
                  v_iSetting = 1;
                  setCtlPrp(v_iSetting);
              }
            } else {
              v_iSetting = 254;
              setCtlPrp(v_iSetting);
            }
          }
          /**
           *setPayStp
           *If PayStpOvrid="NO" and Job.PayStpSal = "Yes" where Eml.Job = Job.Job then {SalRate} and {SalPer} are read only.  When {Eml.PayStp} is set or changed the values of {Eml.SalRat} and {Eml.SalPer} are set to the values from {PayStpAmt.PayStpAmt} and {PayStp.SalPer}
           *If {Eml.PayStpOvrid}="Yes",{Eml.SalRat} and {Eml.SalPer} are editable and do not change when {Eml.PayStp} is changed.
           */
          function setPayStp(prm_sEvt) {
            var v_iCol;
            var v_iCol1;
            var v_sEvt;
            var v_sJob;
            var v_sPayRng;
            var v_sPayStp;
            var v_sPayStpOvrid;
            var v_sPayStpSal;
            var v_Row;
            v_sEvt = prm_sEvt;
            if (ctlGetDef("N_PayStpOvrid_main_1")) {
              v_sPayStpOvrid = ctlGetVal("N_PayStpOvrid_main_1");
              if (v_sPayStpOvrid == "Yes") {
                //REQ#1248-SLC-NV: Code Commented Out And Added To Make The Currency Control SalRat Readonly
                //NuElement.makeEditableById("N_SalRat_main_1");
                NuCtlCurrency.setProperty("N_SalRat_main_1", "readonly", "No");
                NuElement.makeEditableById("N_SalPer_main_1");
              } else {
                v_sJob = ctlGetVal("N_Job_main_1");
                if (v_sJob) {
                  v_datasource = new NuDatasource();
                  v_datasource.setName("JobPayStpSal");
                  v_datasource.setUrlParameter("N_Job", v_sJob);
                  v_datasource.open();
                  v_iCol = v_datasource.getColumnNumByName("PayStpSal");
                  while (v_datasource.next()) {
                    v_row = v_datasource.getRow();
                    v_sPayStpSal = v_row.getValue(v_iCol);
                  }
                  v_datasource.close();
                  if (v_sPayStpSal == "Yes") {
                    if (v_sEvt == "onLoad") {
                      //REQ#1248-SLC-NV: Code Commented Out And Added To Make The Currency Control SalRat Readonly
                      //NuElement.makeReadOnlyById("N_SalRat_main_1");
                      NuCtlCurrency.setProperty("N_SalRat_main_1", "readonly", "Yes");
                      NuElement.makeReadOnlyById("N_SalPer_main_1");
                    } else {
                      v_sPayStp = ctlGetVal("N_PayStp_main_1");
                      v_sPayRng = ctlGetVal("N_PayRng_main_1");
                      lookupArray("Eml","PayStpAmt","N_PayStp_main_1", new Array("N_PayStp=" + v_sPayStp , "N_PayRng=" + v_sPayRng));
                    }
                  }
                }
              }
            }
          }

      /**
       * REQ#1248-SLC-NV: Function Added To Set Currency Parts Of The Control
       * setSalCur
       * his function will set the currency for all salary related currency controls
       */
        function setSalCur(prm_sCur) {
            var v_sCur;
            v_sCur = prm_sCur;
            if (ctlGetDef("N_AnnlSal_main_1")) {
              NuCtlCurrency.setCur("N_AnnlSal_main_1", v_sCur);
            }
            if (ctlGetDef("N_MnthSal_main_1")) {
              NuCtlCurrency.setCur("N_MnthSal_main_1", v_sCur);
            }
            if (ctlGetDef("N_SemiSal_main_1")) {
              NuCtlCurrency.setCur("N_SemiSal_main_1", v_sCur);
            }
            if (ctlGetDef("N_BiWkSal_main_1")) {
              NuCtlCurrency.setCur("N_BiWkSal_main_1", v_sCur);
            }
            if (ctlGetDef("N_WklySal_main_1")) {
              NuCtlCurrency.setCur("N_WklySal_main_1", v_sCur);
            }
            if (ctlGetDef("N_DalySal_main_1")) {
              NuCtlCurrency.setCur("N_DalySal_main_1", v_sCur);
            }
            if (ctlGetDef("N_HrlySal_main_1")) {
              NuCtlCurrency.setCur("N_HrlySal_main_1", v_sCur);
            }
            if (ctlGetDef("N_ShfDiff_main_1")) {
              NuCtlCurrency.setCur("N_ShfDiff_main_1", v_sCur);
            }
            if (ctlGetDef("N_SalChgAmt_main_1")) {
              NuCtlCurrency.setCur("N_SalChgAmt_main_1", v_sCur);
            }
        }
          /**
           * INT_KC REQ#1511-SLC-NV:
           * onChgMsg() Function
           * Function Added For To Handle Controls On Change Event Messages In This Form
           * Parameters:
             $ prm_sCtlName - String - Name Of The Control On Which This Function Will Act
             $ prm_sMsg - String - Message Code Of The Message Which Will Be Displayed
           * Return Type:
             $ boolean -
               __ If Ok Button Clicked, Returns True
               __ If Cancel Button Clicked, Returns False
           * Functionality:
             $ Gets New And Old Control Names From prm_sCtl Value
             $ Gets New And Old Control Values From New And Old Control Names
             $ Displays Confirm Message With Message Code prm_sMsg
             $ If Cancel Button Clicked,
               __ Sets Control Value To Old Value
               __ Returns False
             $ If Ok Button Clicked,
               __ No Change To Control Value
               __ Returns True
           * Sample Usage:
             $ onChgMsg("N_Emp_main_1", "SomeMsgCode")
           * Limitations:
             $ Msg.IsConfirm Needs To Be Checked For Proper Functionality
             $ __ Always Refers To The "O_" Control Value,
               __ Changing Control Value More Than Once And Clicking Cancel
               __ Will Revert It Back To Initial Value At Page Load Time
           */
            function onChgMsg(prm_sCtlName, prm_sMsg) {
              //Variable Declaration Block
              var v_bCnf;
              var v_sCtlNewName;
              var v_sCtlNewVal;
              var v_sCtlOldName;
              var v_sCtlOldVal;
              var v_sMsg;
              var v_ExcpMsg;
              var v_Return;

              //Variable Initialization Block
              v_bCnf = true;
              v_sCtlNewName = prm_sCtlName;
              v_sCtlNewVal = "";
              v_sCtlOldName = "";
              v_sCtlOldVal = "";
              v_sMsg = prm_sMsg;
              v_ExcpMsg = "Within \"onChgMsg()\": \n";
              v_Return = true;

              //Excepion Handling Block
              try {
                //Get Old Control Name
                v_sCtlOldName = "O_" + NuStr.removePrefix(v_sCtlNewName, "N_");
                /*
                 * If "N_" Control Exists, Get Control New Value
                 * Else, Throw Exception
                 */
                if (NuElement.getById(v_sCtlNewName)) {
                  //Get Value
                  v_sCtlNewVal = NuElement.getValueById(v_sCtlNewName);
                } else {
                  //Throw Exception
                  throw "NewCtlNotFoundExcp";
                }
                /*
                 * If "N_" Control Exists, Get Control New Value
                 * Else, Throw Exception
                 */
                if (NuElement.getById(v_sCtlOldName)) {
                  //Get Value
                  v_sCtlOldVal = NuElement.getValueById(v_sCtlOldName);
                } else {
                  //Throw Exception
                  throw "OldCtlNotFoundExcp";
                }
                //Display Message And Get The Button Clicked Value
                v_bCnf = msg(v_sMsg, "");
                /*
                 * If v_bCnf Is True, Set Control Value TO Old Value
                 */
                if (!v_bCnf) {
                  NuElement.setValueById(v_sCtlNewName, v_sCtlOldVal);
                }
                //Set Value Of v_Return
                v_Return = v_bCnf;
              } catch (v_Excp) {
                switch (v_Excp) {
                //Case "N_" Control Not Found
                case "NewCtlNotFoundExcp":
                  //Create Message
                  v_ExcpMsg += "\"N_\" Element Does Not Exist!";
                  //Display Message
                  msg("Exception Message", "msgtext=" + v_ExcpMsg);
                  break;
                //Case "O_" Control Not Found
                case "OldCtlNotFoundExcp":
                  //Create Message
                  v_ExcpMsg += "\"O_\" Element Does Not Exist!";
                  //Display Message
                  msg("Exception Message", "msgtext=" + v_ExcpMsg);
                  break;
                default:
                  //Create Message
                  v_ExcpMsg += v_Excp;
                  //Display Message
                  msg("Exception Message", "msgtext=" + v_ExcpMsg);
                  break;
                }
              }

              //Return Statement
              return v_Return;
            }
            function onChgSup() {
            	if (ctlGetDef("N_TimAttReviewer_main_1")) {
	            	if (ctlGetVal("O_TimAttReviewer_main_1") == "") {
	            		ctlSetVal("N_TimAttReviewer_main_1", ctlGetVal("N_Sup_main_1"));
					}
				}
            }
        ]]>
      </native>
    </event>

      <!-- Merging starts for the event 12583 -->
      <!-- REQ#1511-LM-NV: OnChange Event Code Modified -->
      <event name="onChange" ctl="TimCrdGrp" where="Client" view="edit">
        <native lang="Javascript">
          <![CDATA[
            //Variable Declaration Block
            var v_bCnf;

            //Variable Initialization Block
            v_bCnf = onChgMsg("N_TimCrdGrp_main_1", "GrpCalChg");

            if (v_bCnf) {
              lookup("Eml","OvrTim","N_TimCrdGrp_main_1","N_TimCrdGrp=" + ctlGetVal("N_TimCrdGrp_main_1"));
            }
          ]]>
        </native>
      </event>

      <event name="onLookup" ctl="TimCrdGrp" where="Client" view="edit">
        <native lang="JavaScript">
          <![CDATA[
            var sOTRul;
            sOTRul = lookupGetVal("OTRul");
            if (sOTRul == "CA Overtime Rule") {
              lookup("Eml","PrmAdr","N_SysEmpAdr_PrmAdr_1","N_Emp="+ctlGetVal("N_Emp_main_1"));
            }
          ]]>
        </native>
      </event>

      <event name="onLookup" ctl="SysEmpAdr" where="Client" view="edit">
        <native lang="JavaScript">
          <![CDATA[
            var sPrmAdr;
            sPrmAdr = lookupGetVal("StateProv");
            if (sPrmAdr != "CA") {
              msg("AlertMsg1", "")
              ctlSetVal("N_TimCrdGrp_main_1","");
            }
          ]]>
        </native>
      </event>

      <!-- End of meging for the event 12583 -->

    <event name="onClick" ctl="Delete" where="Client" view="edit">
      <native lang="JavaScript">
        <![CDATA[
         var v_Return;
         ctlSetVal("F_View","list");
         ctlSetVal("F_NavId","");
         v_Return = true;
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="IsPrm" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
            lookupArray("Eml","CountPayGrpEml","N_PayGrp_main_1", new Array("N_Emp_main_1=" + NuStr.toUri(ctlGetVal("N_Emp_main_1")), "N_PayGrp_main_1=" + NuStr.toUri(ctlGetVal("N_PayGrp_main_1"))));
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="PayGrp" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
             lookupArray("Eml", "CountPayGrpEml", "N_PayGrp_main_1", new Array("N_Emp_main_1=" + ctlGetVal("N_Emp_main_1"), "N_PayGrp_main_1=" + ctlGetVal("N_PayGrp_main_1")));
        ]]>
      </native>
    </event>

	 <event name="onChange" ctl="Sup" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
           onChgSup();
			]]>
      </native>
    </event>

    <event name="onLookup" ctl="PayGrp" where="Client" view="edit">
      <native lang="JavaScript">
        <![CDATA[
          var v_sCntEml;
          var v_sPayGrp;
          var v_sPayGrpOld;
          v_sCntEml = lookupGetVal("CntEml");
          v_sPayGrp = ctlGetVal("N_PayGrp_main_1");
          v_sPayGrpOld = ctlGetVal("O_PayGrp_main_1");
          ctlSetVal("N_SysPayGrpCnt_main_1",v_sCntEml);
          if (v_sPayGrp != v_sPayGrpOld) {
            lookup("Eml", "PayPerLookup", "N_SysSalEffDt_main_1", "N_PayGrp_main_1=" + ctlGetVal("N_PayGrp_main_1"));
          }
        ]]>
      </native>
    </event>

    <event name="onLookup" ctl="SysSalEffDt" where="Client" view="edit">
      <native language="Javascript">
        <![CDATA[
          var v_iFlag = 0;
          var v_sPayGrp;
          var v_sPayPer = "";
          var v_sSalEffDtComboTag;
          var v_sSalEndDtComboTag;
          var v_sSalEndDtProp = "";
          var v_sSalEndDtRst;
          var v_sSalStDtProp = "";
          var v_sSalStDtRst;
          v_sPayPer = lookupGetVal("PayPer");
          v_sSalStDtRst = lookupGetVal("SalStDtRst");
          v_sSalEndDtRst = lookupGetVal("SalEndDtRst");
      if(v_sPayPer != "") {
          ctlSetVal("N_PayPer_main_1", v_sPayPer);
      }
          ctlSetVal("N_SysSalStDtRst_main_1", v_sSalStDtRst);
          ctlSetVal("N_SysSalEndDtRst_main_1", v_sSalEndDtRst);
          v_sPayGrp = ctlGetVal("N_PayGrp_main_1");
          v_sSalStDtRst = ctlGetVal("N_SysSalStDtRst_main_1");
          v_sSalEndDtRst = ctlGetVal("N_SysSalEndDtRst_main_1");
          if (v_sPayGrp != "" && v_sSalStDtRst == "Yes") {
            ctlSetStyle("SalEffDtDateTag", "class", "visibleNo");
            ctlSetStyle("SalEffDtComboTag", "class", "visibleYes");
          } else {
            ctlSetStyle("SalEffDtDateTag", "class", "visibleYes");
            ctlSetStyle("SalEffDtComboTag", "class", "visibleNo");
          }
          if (v_sPayGrp != "" && v_sSalEndDtRst == "Yes") {
            ctlSetStyle("SalEndDtDateTag", "class", "visibleNo");
            ctlSetStyle("SalEndDtComboTag", "class", "visibleYes");
          } else {
            ctlSetStyle("SalEndDtDateTag", "class", "visibleYes");
            ctlSetStyle("SalEndDtComboTag", "class", "visibleNo");
          }
          v_sSalEffDtComboTag = ctlGetStyle("SalEffDtComboTag", "class");
          v_sSalEndDtComboTag = ctlGetStyle("SalEndDtComboTag", "class");
          if (v_sSalEffDtComboTag == "visibleYes") {
            ctlSetVal("N_SysSalEffCmb_main_1", "");
            lookup("Eml", "ComboPayCalStDtLookup", "N_PayPer_main_1", "N_PayGrp_main_1=" + ctlGetVal("N_PayGrp_main_1"));
            v_iFlag = 1;
          }
          if (v_iFlag == 0) {
            if (v_sSalEndDtComboTag == "visibleYes") {
              ctlSetVal("N_SysSalEndCmb_main_1", "");
              lookup("Eml", "ComboPayCalEndDtLookup", "N_SysSalEffCmb_main_1", "N_PayGrp_main_1=" + ctlGetVal("N_PayGrp_main_1"));
            }
          }
        ]]>
      </native>
    </event>

    <event name="onLookup" ctl="PayPer" where="Client" view="edit">
      <native language="Javascript">
        <![CDATA[
          var v_sSalEndDtProp = "";
          comboRefresh("N_SysSalEffCmb_main_1", "");
          v_sSalEndDtComboTag = ctlGetStyle("SalEndDtComboTag", "class");
          if (v_sSalEndDtComboTag == "visibleYes") {
            ctlSetVal("N_SysSalEndCmb_main_1", "");
            lookup("Eml", "ComboPayCalEndDtLookup", "N_SysSalEffCmb_main_1", "N_PayGrp_main_1=" + ctlGetVal("N_PayGrp_main_1"));
          }
        ]]>
      </native>
    </event>

    <event name="onLookup" ctl="SysSalEffCmb" where="Client" view="edit">
      <native language="Javascript">
        <![CDATA[
          comboRefresh("N_SysSalEndCmb_main_1", "");
        ]]>
      </native>
    </event>

    <event name="onLoad" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          var v_iSetting;
          var v_sPayGrp;
          var v_sPayPer;
          var v_sSalPer;
          var v_sSalStDtRst;
          var v_sSalEndDtRst;
          var v_sup= ctlGetVal("N_Sup_main_1");
          var v_supFullName="";
          
          if(!NuStr.isBlank(v_sup)){
          var v_datasource = new NuDatasource();
          v_datasource.setName("GetEmpCde");
          v_datasource.setUrlParameter("N_varEmpId", v_sup);
          v_datasource.open();
          var v_iCol = v_datasource.getColumnNumByName("EmpCde");
          while(v_datasource.next()) {
          var v_row = v_datasource.getRow();
          v_supFullName = v_row.getValue(v_iCol);
          }
          v_datasource.close();
          }
          ctlSetVal("N_Sup_main_1", v_supFullName );
          
          ctlSetProp("N_SysSalEffCmb_main_1", "pfind", ctlGetProp("C_SysSalEffCmb_main_1", "pfind"));
          ctlSetProp("N_SysSalEndCmb_main_1", "pfind", ctlGetProp("C_SysSalEndCmb_main_1", "pfind"));
          v_sPayGrp = ctlGetVal("N_PayGrp_main_1");
          v_sSalStDtRst = ctlGetVal("N_SysSalStDtRst_main_1");
          v_sSalEndDtRst = ctlGetVal("N_SysSalEndDtRst_main_1");
          v_sSalPer = ctlGetVal("N_SalPer_main_1");
          if (v_sPayGrp != "" && v_sSalStDtRst == "Yes") {
            ctlSetStyle("SalEffDtDateTag", "class", "visibleNo");
            ctlSetStyle("SalEffDtComboTag", "class", "visibleYes");
          } else {
            ctlSetStyle("SalEffDtDateTag", "class", "visibleYes");
            ctlSetStyle("SalEffDtComboTag", "class", "visibleNo");
          }
          if (v_sPayGrp != "" && v_sSalEndDtRst == "Yes") {
            ctlSetStyle("SalEndDtDateTag", "class", "visibleNo");
            ctlSetStyle("SalEndDtComboTag", "class", "visibleYes");
          } else {
            ctlSetStyle("SalEndDtDateTag", "class", "visibleYes");
            ctlSetStyle("SalEndDtComboTag", "class", "visibleNo");
          }
          v_sPayPer = ctlGetVal("N_PayPer_main_1");
          setCtlPrpVal(v_sSalPer, v_sPayPer);
          setPayStp(prm_sEvt);
           onChgSup();
        ]]>
      </native>
    </event>

    <event name="BeforeSave" where="Client" view="edit">
      <native lang="JavaScript">
        <![CDATA[
          var v_Return = true;
          var v_bMove = false;
          var v_iCntEml;
          var v_dSalEffDt;
          var v_dSalEndDt;
          var v_sCntEml;
          var v_sPayGrp;
          var v_sSalEffDt;
          var v_sSalEffDtComboTag;
          var v_sSalEndDt;
          var v_sSalEndDtComboTag;
          var v_sSalPer;
          if (ctlGetDef("N_SalEffDt_main_1")) {
            v_sSalPer = ctlGetVal("N_SalPer_main_1");
            v_sSalEffDtComboTag = ctlGetStyle("SalEffDtComboTag", "class");
            v_sSalEndDtComboTag = ctlGetStyle("SalEndDtComboTag", "class");
            if (v_sSalEffDtComboTag == "visibleYes") {
              v_sSalEffDt = ctlGetVal("N_SysSalEffCmb_main_1");
              ctlSetVal("N_SalEffDt_main_1", v_sSalEffDt);
              ctlSetVal("N_SysIsSalEffCmb_main_1", "Yes");
            } else {
              v_sSalEffDt = ctlGetVal("N_SysSalEffDt_main_1");
              ctlSetVal("N_SalEffDt_main_1", v_sSalEffDt);
              ctlSetVal("N_SysIsSalEffCmb_main_1", "No");
            }
            if (v_sSalEndDtComboTag == "visibleYes") {
              v_sSalEndDt = ctlGetVal("N_SysSalEndCmb_main_1");
              ctlSetVal("N_SalEndDt_main_1", v_sSalEndDt);
              ctlSetVal("N_SysIsSalEndCmb_main_1", "Yes");
            } else {
              v_sSalEndDt = ctlGetVal("N_SysSalEndDt_main_1");
              ctlSetVal("N_SalEndDt_main_1", v_sSalEndDt);
              ctlSetVal("N_SysIsSalEndCmb_main_1", "No");
            }

            v_dSalEndDt = NuStr.toDate(v_sSalEndDt, "");
            v_dSalEffDt = NuStr.toDate(v_sSalEffDt, "");
            if (v_sSalPer == "C") {
              if (v_sSalEffDt == "") {
                msg("SalEffDtRqd", "");
                v_Return = false;
              }
              else if (v_sSalEndDt == "") {
              msg("SalEndDtRqd", "");
              v_Return = false;
              } else {
                v_sPayGrp = ctlGetVal("N_PayGrp_main_1");
                if (v_sPayGrp == "") {
                  msg("PayGrpRqd", "");
                  v_Return = false;
                } else {
                  v_Return = true;
                }
              }
            }

            //This function has not been deprecated yet since there is no corresponding function in NuDate class. Going forward, this will be deprecated and will have to modified here.
            if (ctlGetVal("N_SalEndDt_main_1") != "" && dteDifference(v_dSalEndDt, v_dSalEffDt, NuDate.c_IPART_DAY) < 0) {
              msg("SalEndDtLt", "");
              v_Return = false;
            }
          }

          v_sCntEml = ctlGetVal("N_SysPayGrpCnt_main_1");
          v_iCntEml = NuStr.toInt(v_sCntEml);
          if (v_iCntEml >= 1 && ctlGetVal("N_IsPrm_main_1") == "Yes") {
            v_bMove = msg("CnfMsg53", "");
            //v_bMove = msg("PayGrpEmlCnt", "");
            if (v_bMove) {
              ctlSetVal("N_SysDelRec_main_1","Yes");
              v_Return = true;
            } else {
              ctlSetVal("N_SysDelRec_main_1","No");
              ctlSetVal("N_IsPrm_main_1",1);
              v_Return = true;
          }
          }
		if (ctlGetDef("N_WrkHrs_main_1") && ctlGetDef("N_WrkDays_main_1")) {
			v_sWrkHrs = NuStr.toNum(ctlGetVal("N_WrkHrs_main_1"));
			v_sWrkDays = NuStr.toNum(ctlGetVal("N_WrkDays_main_1"));
			if (v_sWrkDays=="") {
			 v_sWrkDays=5;
			}
			if ( v_sWrkDays < 0 || v_sWrkDays > 7 ) {
			 msg("InvalidWrkDays","");
			 v_Return = false;
			}
			if (v_sWrkHrs < 0  || v_sWrkHrs > (v_sWrkDays * 24) ) {
			 msg("InvalidWrkHrs","");
			 v_Return = false;
			}
		}
          return v_Return;
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="PayStp" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          setPayStp(prm_sEvt);
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="PayStpOvrid" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          setPayStp(prm_sEvt);
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="Job" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          setPayStp(prm_sEvt);
        ]]>
      </native>
    </event>

    <!-- REQ#1248-SLC-NV: Event Code Modified For Multi Currency Functionality -->
    <event name="onLookup" ctl="PayStp" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          var v_fPayStpAmt;
          var v_sPayStpAmtCur;
          var v_sSalPer;
          v_fPayStpAmt = "";
          v_sSalPer = "";
          v_fPayStpAmt = lookupGetVal("PayStpAmt");
          v_fPayStpAmt = NuMny.toNum(v_fPayStpAmt);
          v_sPayStpAmtCur = lookupGetVal("PayStpAmtCur");
          /* REQ#1248-SLC-NV : SalPerCde is Changed from SalPer as SalPer is Fetching the Description.  */
          v_sSalPer = lookupGetVal("SalPerCde");
          //ctlSetVal("N_SalRat_main_1", v_fPayStpAmt);
          NuCtlCurrency.setAmt("N_SalRat_main_1", v_fPayStpAmt);
          NuCtlCurrency.setCur("N_SalRat_main_1", v_sPayStpAmtCur);
          setSalCur(v_sPayStpAmtCur);
          ctlSetVal("N_SalPer_main_1", v_sSalPer, true);
          //REQ#1248-SLC-NV: Code Commented Out And Added To Make The Currency Control SalRat Readonly
          //NuElement.makeReadOnlyById("N_SalRat_main_1");
          NuCtlCurrency.setProperty("N_SalRat_main_1", "readonly", "Yes");
          NuElement.makeReadOnlyById("N_SalPer_main_1");
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="PayRng" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          if (ctlGetVal("N_PayRng_main_1") != "") {
            ctlSetVal("N_SysPayRng_main_1",ctlGetVal("N_PayRng_main_1"));
            lookup("Eml","payrngChk","N_SysPayRng_main_1","N_SysPayRng_main_1="+ctlGetVal("N_SysPayRng_main_1"));
          }
          v_Return = false;
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="SalRat" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          if (ctlGetVal("N_PayRng_main_1") != "") {
            ctlSetVal("N_SysPayRng_main_1",ctlGetVal("N_PayRng_main_1"));
            lookup("Eml","payrngChk","N_SysPayRng_main_1","N_SysPayRng_main_1="+ctlGetVal("N_SysPayRng_main_1"));
          }
          v_Return = false;
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="PayPer" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          var v_iSetting;
          var v_sPayPer;
          var v_sSalPer;
          v_sPayPer = ctlGetVal("N_PayPer_main_1");
          v_sSalPer = ctlGetVal("N_SalPer_main_1");
          setCtlPrpVal(v_sSalPer, v_sPayPer);
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="SalPer" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          var v_iSetting;
          var v_sPayPer;
          var v_sSalPer;
          ctlSetVal("N_SysPayRng_main_1",ctlGetVal("N_PayRng_main_1"));
          v_sSalPer = ctlGetVal(prm_sCtl);
          v_sPayPer = ctlGetVal("N_PayPer_main_1");
          setCtlPrpVal(v_sSalPer, v_sPayPer);
          if (ctlGetVal("N_PayRng_main_1") != "") {
            lookup("Eml","payrngChk","N_SysPayRng_main_1","N_SysPayRng_main_1="+ctlGetVal("N_SysPayRng_main_1"));
            v_Return = false;
          }
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="WrkHrs" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          if (ctlGetVal("N_PayRng_main_1") != "") {
            ctlSetVal("N_SysPayRng_main_1",ctlGetVal("N_PayRng_main_1"));
            lookup("Eml","payrngChk","N_SysPayRng_main_1","N_SysPayRng_main_1="+ctlGetVal("N_SysPayRng_main_1"));
          }
          v_Return = false;
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="SalChgAmt" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          if (ctlGetVal("N_PayRng_main_1") != "") {
            ctlSetVal("N_SysPayRng_main_1",ctlGetVal("N_PayRng_main_1"));
            lookup("Eml","payrngChk","N_SysPayRng_main_1","N_SysPayRng_main_1="+ctlGetVal("N_SysPayRng_main_1"));
          }
          v_Return = false;
        ]]>
      </native>
    </event>

    <event name="onChange" ctl="SalChgPct" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          if (ctlGetVal("N_PayRng_main_1") != "") {
            ctlSetVal("N_SysPayRng_main_1",ctlGetVal("N_PayRng_main_1"));
            lookup("Eml","payrngChk","N_SysPayRng_main_1","N_SysPayRng_main_1="+ctlGetVal("N_SysPayRng_main_1"));
          }
          v_Return = false;
        ]]>
      </native>
    </event>

         <event name="onLookup" ctl="SysPayRng" where="Client" view="edit">
      <native lang="JavaScript">
        <![CDATA[
	  var v_Return = "";
          var v_sAnnSal;
          var v_sEmlEffDt;
          var v_sEmlEffDtO;
          var v_sMaxRng;
          var v_sMinRng;
          var v_sNewSal;
          var v_sPayRng;
          var v_sPayRngO;
          var v_sSalChgAmt;
          var v_sSalChgAmtO;
          var v_sSalChgPct;
          var v_sSalChgPctO;
          var v_sSysMaxPayRng;
          var v_sSysMinPayRng;
          var v_sSalPer;
          var v_sSalPerO;
          var v_sSysRangePer;
          var v_sSalRat;
          var v_sSalRatO;
          var v_sTemp;
          var v_sWrkHrs;
          var v_sWrkHrsO;
	  var v_sWrkDays;
	  var v_sWrkDaysO;
 	  v_sEmlEffDt = ctlGetVal("N_EmlEffDt_main_1");
          v_sEmlEffDtO = ctlGetVal("O_EmlEffDt_main_1");
          v_sSalRat = ctlGetVal("N_SalRat_main_1");
          v_sSalRatO = ctlGetVal("O_SalRat_main_1");
          v_sSalChgAmt = ctlGetVal("N_SalChgAmt_main_1");
          v_sSalChgAmtO = ctlGetVal("O_SalChgAmt_main_1");
          v_sSalChgPct = ctlGetVal("N_SalChgPct_main_1");
          v_sSalChgPctO = ctlGetVal("O_SalChgPct_main_1");
          v_sSalPer = ctlGetVal("N_SalPer_main_1");
          v_sSalPerO = ctlGetVal("O_SalPer_main_1");
          v_sPayRng = ctlGetVal("N_PayRng_main_1");
          v_sPayRngO = ctlGetVal("O_PayRng_main_1");
          v_sWrkHrs = ctlGetVal("N_WrkHrs_main_1");
          v_sWrkHrsO = ctlGetVal("O_WrkHrs_main_1");
 	  v_sWrkDays = ctlGetVal("N_WrkDays_main_1");
	  v_sWrkDays = ctlGetVal("O_WrkDays_main_1");
	  v_sSalRat = strToMny(v_sSalRat);
	  v_sSalRat = parseFloat(v_sSalRat.substr(4));
	  v_sSalRatO = strToMny(v_sSalRatO);
	  v_sSalRatO = parseFloat(v_sSalRatO.substr(4));
	  if(v_sSalChgAmt!=""){
	  v_sSalChgAmt = strToMny(v_sSalChgAmt);
	  v_sSalChgAmt = parseFloat(v_sSalChgAmt.substr(4));
	  }
	  if(v_sSalChgAmtO!=""){
	  v_sSalChgAmtO = strToMny(v_sSalChgAmtO);
	  v_sSalChgAmtO = parseFloat(v_sSalChgAmtO.substr(4));
	  }
	  if(v_sSalChgPct!=""){
	  v_sSalChgPct = strToMny(v_sSalChgPct);
	  v_sSalChgPct = parseFloat(v_sSalChgPct.substr(4));
	  }
	  if(v_sSalChgPctO!=""){
	  v_sSalChgPctO = strToMny(v_sSalChgPctO);
	  v_sSalChgPctO = parseFloat(v_sSalChgPctO.substr(4));
	  }
          v_sSysMinPayRng = lookupGetVal("Minimum");
          v_sSysMaxPayRng = lookupGetVal("Maximum");
          v_sSysRangePer = lookupGetVal("RangePer");
	  v_sSysMinPayRng = strToMny(v_sSysMinPayRng);
	  v_sSysMinPayRng = parseFloat(v_sSysMinPayRng.substr(4));
	  v_sSysMaxPayRng = strToMny(v_sSysMaxPayRng);
	  v_sSysMaxPayRng = parseFloat(v_sSysMaxPayRng.substr(4));
          v_sSysRangePer = v_sSysRangePer;
          if (v_sWrkHrs == "") {
            v_sWrkHrs = 40;
          }
          if (v_sWrkHrsO == "") {
            v_sWrkHrsO = 40;
 	  }
	  if (v_sWrkDays == "") {
	  v_sWrkDays= 5;
	  }
	  if (v_sWrkDaysO == "") {
	  v_sWrkDaysO = 5;
	  }
          v_sAnnSal = 0;
          v_sMinRng = 0;
          v_sMaxRng = 0;
          v_sNewSal = 0;
          if ((v_sSalRat != v_sSalRatO) || (v_sSalChgAmt != v_sSalChgAmtO) || (v_sSalChgPct != v_sSalChgPctO) || (v_sSalPer != v_sSalPerO) || (v_sPayRng != v_sPayRngO) || (v_sWrkHrs != v_sWrkHrsO)) {
            if (v_sSalRat != v_sSalRatO) {
              v_sNewSal = v_sSalRat + 0;
	    } else if (((v_sSalChgAmt!="") && (v_sSalChgAmt!="")) ||v_sSalChgAmt != v_sSalChgAmtO) {
              if (v_sEmlEffDt == v_sEmlEffDtO) {
                v_sNewSal = v_sSalRatO + v_sSalChgAmt;
              } else {
                v_sNewSal = v_sSalRatO + (v_sSalChgAmt - v_sSalChgAmtO);
              }
	    } else if (((v_sSalChgPct!="") && (v_sSalChgPctO!="")) ||v_sSalChgPct != v_sSalChgPctO) {
              if (v_sEmlEffDt == v_sEmlEffDtO) {
                v_sNewSal = v_sSalRatO + (v_sSalRatO * v_sSalChgPct / 100);

              } else {
                v_sNewSal = v_sSalRatO + (v_sSalRatO * ((v_sSalChgPct - v_sSalChgPctO)/100));
              }
            } else {
            v_sNewSal = v_sSalRat + 0; }
            if (v_sSalPer == "M") {
              v_sAnnSal = v_sNewSal * 12;
            } else if (v_sSalPer == "S") {
              v_sAnnSal = v_sNewSal * 24;
            } else if (v_sSalPer == "B") {
              v_sAnnSal = v_sNewSal * 26;
            } else if (v_sSalPer == "W") {
              v_sAnnSal = v_sNewSal * 52;
            } else if (v_sSalPer == "H") {
              v_sAnnSal = v_sNewSal * (52 * v_sWrkHrs);
            } else if (v_sSalPer == "D") {
	      v_sAnnSal = v_sNewSal * (52 * v_sWrkDays);
            } else {
              v_sAnnSal = v_sNewSal + 0;
            }
            if (v_sSysRangePer == "A") {
              v_sMinRng = v_sSysMinPayRng;
              v_sMaxRng = v_sSysMaxPayRng;
            } else if (v_sSysRangePer == "M") {
              v_sMinRng = v_sSysMinPayRng * 12;
              v_sMaxRng = v_sSysMaxPayRng * 12;
            } else if (v_sSysRangePer == "S") {
              v_sMinRng = v_sSysMinPayRng * 24;
              v_sMaxRng = v_sSysMaxPayRng * 24;
            } else if (v_sSysRangePer == "B") {
              v_sMinRng = v_sSysMinPayRng * 26;
              v_sMaxRng = v_sSysMaxPayRng * 26;
            } else if (v_sSysRangePer == "W") {
              v_sMinRng = v_sSysMinPayRng * 52;
              v_sMaxRng = v_sSysMaxPayRng * 52;
            } else if (v_sSysRangePer == "H") {
              v_sMinRng = v_sSysMinPayRng * 52 * v_sWrkHrs;
              v_sMaxRng = v_sSysMaxPayRng * 52 * v_sWrkHrs;
            }
        //RKV - 11/02/2012 - 103007
        //Added one more condition for the PayRangeOut confirm message
        if(v_sSalRat!="" && v_sSalPer!="" && v_sWrkHrs!=""){
            if (((v_sAnnSal > v_sMaxRng) || (v_sAnnSal < v_sMinRng)) && (v_sMinRng !=0 && v_sMaxRng !=0) && (v_sPayRng != "") ) {
              isConfirm = msg("PayRngOutRng","","");
              if (isConfirm == false) {
                v_Return = true;
              }
            }
          }
	}
          return v_Return;

        ]]>
      </native>
    </event>

    <event name="onChange" ctl="Ent" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          var v_sEnt;
          var v_sEntPrc;
          v_sEnt = ctlGetVal("N_Ent_main_1");
          v_sEntPrc = ctlGetVal("N_SysEntPrc_main_1");
          if (v_sEntPrc == "BothOpen" || v_sEntPrc == "BothEnforced") {
            lookup("Eml", "GetEntInfo", "N_Ent_main_1", "N_PrmEnt=" + v_sEnt);
          }
        ]]>
      </native>
    </event>

    <event name="onLookup" ctl="Ent" where="Client">
      <native lang="Javascript">
        <![CDATA[
          var v_sCmp;
          var v_sDiv;
          var v_sDpt;
          var v_sLoc;
          var v_sOrg;
          var v_sUnt;
          v_sCmp = lookupGetVal("Cmp");
          v_sDiv = lookupGetVal("Div");
          v_sDpt = lookupGetVal("Dpt");
          v_sLoc = lookupGetVal("Loc");
          v_sOrg = lookupGetVal("Org");
          v_sUnt = lookupGetVal("Unt");
          if (ctlGetDef("N_Cmp_main_1")) {
            ctlSetVal("N_Cmp_main_1", v_sCmp, true);
          }
          if (ctlGetDef("N_Div_main_1")) {
            ctlSetVal("N_Div_main_1", v_sDiv, true);
          }
          if (ctlGetDef("N_Dpt_main_1")) {
            ctlSetVal("N_Dpt_main_1", v_sDpt, true);
          }
          if (ctlGetDef("N_Loc_main_1")) {
            ctlSetVal("N_Loc_main_1", v_sLoc, true);
          }
          if (ctlGetDef("N_Org_main_1")) {
            ctlSetVal("N_Org_main_1", v_sOrg, true);
          }
          if (ctlGetDef("N_Unt_main_1")) {
            ctlSetVal("N_Unt_main_1", v_sUnt, true);
          }
        ]]>
      </native>
    </event>
<!--
    <event name="onChange" ctl="Pos" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          if ((ctlGetVal("N_SysConfigValues_posdefault_1") == "True") && (ctlGetVal("N_Pos_main_1") != "")) {
            lookup("Eml","SituFromPos",prm_sCtl,"N_Pos_main_1="+ctlGetVal(prm_sCtl));
          }
          v_Return = false;
        ]]>
      </native>
    </event>
    <event name="onLookup" ctl="Pos" where="Client" view="edit">
      <native lang="Javascript">
        <![CDATA[
          var v_i;
          var v_iCtlRowCnt;
          var v_oCtlXml;
          var v_oCtlTmpXml;
          var v_sCmp = "";
          var v_sDiv = "";
          var v_sDpt = "";
          var v_sEmlPos = "";
          var v_sEmp = "";
          var v_sJob = "";
          var v_sLoc = "";
          var v_sCtlLinTag;
          var v_sCtlLstValObj;
          var v_sOldPos;
          var v_sOldJob;
          var v_sOldCmp;
          var v_sOldLoc;
          var v_sOldOrg;
          var v_sOldDiv;
          var v_sOldDpt;
          var v_sOldUnt;
          var v_sOldSup;
          var v_sOrg = "";
          var v_sPosEffDt = "";
          var v_sPosSts = "";
          var v_sSup = "";
          var v_sUnt = "";
          sTemp = false;
          isConfirm = null;
          v_sOldPos = ctlGetVal("O_Pos_main_1");
          v_sOldJob = ctlGetVal("O_Job_main_1");
          v_sOldCmp = ctlGetVal("O_Cmp_main_1");
          v_sOldLoc = ctlGetVal("O_Loc_main_1");
          v_sOldOrg = ctlGetVal("O_Org_main_1");
          v_sOldDiv = ctlGetVal("O_Div_main_1");
          v_sOldDpt = ctlGetVal("O_Dpt_main_1");
          v_sOldUnt = ctlGetVal("O_Unt_main_1");
          v_sOldSup = ctlGetVal("O_Sup_main_1");
          v_sJob = lookupGetVal("Job");
          v_sCmp = lookupGetVal("Cmp");
          v_sLoc = lookupGetVal("Loc");
          v_sOrg = lookupGetVal("Org");
          v_sDiv = lookupGetVal("Div");
          v_sDpt = lookupGetVal("Dpt");
          v_sUnt = lookupGetVal("Unt");
          v_sSup = lookupGetVal("Emp");
          v_sEmlPos = lookupGetVal("EmlPos");
          v_sPosEffDt = ctlGetVal("N_PosEffDt_main_1");
          if (v_sJob != "") {
            ctlSetVal("N_Job_main_1",v_sJob);
            ctlSetVal("N_JobEffDt_main_1",v_sPosEffDt);
          }
          if (v_sCmp != "") {
            ctlSetVal("N_Cmp_main_1",v_sCmp );
            ctlSetVal("N_CmpEffDt_main_1",v_sPosEffDt);
          }
          if (v_sLoc != "") {
            ctlSetVal("N_Loc_main_1",v_sLoc);
            ctlSetVal("N_LocEffDt_main_1",v_sPosEffDt);
          }
          if (v_sOrg != "") {
            ctlSetVal("N_Org_main_1", v_sOrg);
            ctlSetVal("N_OrgEffDt_main_1",v_sPosEffDt);
          }
          if (v_sDiv != "") {
            ctlSetVal("N_Div_main_1", v_sDiv);
            ctlSetVal("N_DivEffDt_main_1",v_sPosEffDt);
          }
          if (v_sDpt != "") {
            ctlSetVal("N_Dpt_main_1",v_sDpt);
            ctlSetVal("N_DptEffDt_main_1",v_sPosEffDt);
          }
          if (v_sUnt != "") {
            ctlSetVal("N_Unt_main_1", v_sUnt);
            ctlSetVal("N_UntEffDt_main_1",v_sPosEffDt);
          }
          if (v_sSup != "" && ctlGetVal("p_vfrm") != "EmlPosChange") {
            ctlSetVal("N_Sup_main_1",v_sSup);
            ctlSetVal("N_SupEffDt_main_1",v_sPosEffDt);
          }
          if (v_sEmlPos != "") {
            v_oCtlXml = lookupGetXml();
            v_oCtlTmpXml = v_oCtlXml.getXmlByPath("lines");
            v_iCtlRowCnt = v_oCtlTmpXml.getCount();
            for (v_i = 1 ; v_i <= v_iCtlRowCnt; v_i++) {
              v_oCtlXmlCol = v_oCtlTmpXml.getChild(v_i);
              v_sCtlLinTag = v_oCtlXmlCol.getTag();
              if (v_sCtlLinTag == "line") {
                v_sEmp += v_oCtlXmlCol.getChild(14).getContentByPath("val");
                if (v_i < v_iCtlRowCnt) {
                  v_sEmp += ",";
                  if (0 == v_i % 5) {
                    v_sEmp += "\n";
                  }
                }
              }
            }
            isConfirm = msg("PosOccPosChg", "EmployeeList= " + v_sEmp +" |Position= " + v_sEmlPos + " ");
            if (isConfirm == false) {
              ctlSetVal("N_Pos_main_1", v_sOldPos);
              ctlSetVal("N_Job_main_1", v_sOldJob);
              ctlSetVal("N_Cmp_main_1", v_sOldCmp);
              ctlSetVal("N_Loc_main_1", v_sOldLoc);
              ctlSetVal("N_Org_main_1", v_sOldOrg);
              ctlSetVal("N_Div_main_1", v_sOldDiv);
              ctlSetVal("N_Dpt_main_1", v_sOldDpt);
              ctlSetVal("N_Unt_main_1", v_sOldUnt);
              ctlSetVal("N_Sup_main_1", v_sOldSup);
              sTemp = true;
            }
          }
          v_Return = sTemp;
        ]]>
      </native>
    </event>
-->
  <!-- Client Side Event Handling Ends Starts -->
  <!-- Static Dataset Declaration Declaration Block Starts Here -->

    <!--  Dataset for event 12583 -->
    <dataset name="OvrTim">
    <tables>
      <tbl name="TimCrdGrp" main="Yes" />
      <tbl name="TimCrdCtlAct" join="LEFT" to="TimCrdGrp">
      <eq>
        <fld name="TimCrdGrp.TimCrdGrp" />
        <fld name="TimCrdCtlAct.TimCrdGrp" />
      </eq>
      </tbl>
    </tables>
    <display>
      <fld name="TimCrdCtlAct.OTRul" />
    </display>
    <where>
      <eq>
      <fld name="TimCrdGrp.TimCrdGrp" />
      <val>[N_TimCrdGrp]</val>
      </eq>
    </where>
    </dataset>


    <dataset name="PrmAdr">
    <tables>
      <tbl name="Eml" main="Yes" />
      <tbl name="EmpAdr" join="LEFT" to="Eml">
      <eq>
        <fld name="EmpAdr.Emp" />
        <fld name="Eml.Emp" />
      </eq>
      </tbl>
    </tables>
    <display>
      <fld name="EmpAdr.StateProv" />
    </display>
    <where>
      <and>
      <eq>
        <fld name="Eml.Emp" />
        <val>[N_Emp]</val>
      </eq>
      <eq>
        <fld name="EmpAdr.PrmAdrs" />
        <val>1</val>
      </eq>
      </and>
    </where>
    <distinct>Yes</distinct>
    </dataset>

    <dataset name="ComboClkCde" cacheable="no">
      <tables>
        <tbl name="Clk"/>
       </tables>
      <display>
          <fld name="Clk.Clk" />
          <fld name="Display">
            <append>
              <fld name="Clk.Clk" type="String" />
              <val type="String"> (</val>
              <fld name="Clk.ClkName" type="String" />
              <val>)</val>
            </append>
          </fld>
      </display>
      <order>
        <fld name="Clk.Clk"/>
      </order>
    </dataset>
    <!--  Dataset Definitions end for event 12583 -->



    <dataset name="ComboPayCalStDt" cacheable="No">
      <tables>
        <tbl name="PayCal" />
      </tables>
      <display>
        <fld name="PayCalStDt" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="PayGrp" />
            <val>[fld_main.PayGrp]</val>
          </eq>
          <ge>
            <fld name="PayCalStDt" />
            <val>[Date]</val>
          </ge>
        </and>
      </where>
      <order>
        <fld name="PayCalStDt" />
      </order>
    </dataset>

    <dataset name="ComboPayCalEndDt" cacheable="No">
      <tables>
        <tbl name="PayCal" />
      </tables>
      <display>
        <fld name="PayCalEndDt" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="PayGrp" />
            <val>[fld_main.PayGrp]</val>
          </eq>
          <ge>
            <fld name="PayCalEndDt" />
            <val>[Date]</val>
          </ge>
        </and>
      </where>
      <order>
        <fld name="PayCalEndDt" />
      </order>
    </dataset>

    <dataset name="ComboPayCalStDtLookup" cacheable="No">
      <tables>
        <tbl name="PayCal" />
      </tables>
      <display>
        <fld name="PayCalStDt"/>
      </display>
      <where>
        <and>
          <eq>
            <fld name="PayCal.PayGrp" />
            <val>[N_PayGrp_main_1]</val>
          </eq>
          <ge>
            <fld name="PayCal.PayCalStDt" />
            <val>[Date]</val>
          </ge>
        </and>
      </where>
      <order>
        <fld name="PayCalStDt" />
      </order>
    </dataset>

    <dataset name="ComboPayCalEndDtLookup" cacheable="No">
      <tables>
        <tbl name="PayCal" />
      </tables>
      <display>
        <fld name="PayCalEndDt"/>
      </display>
      <where>
        <and>
          <eq>
            <fld name="PayCal.PayGrp" />
            <val>[N_PayGrp_main_1]</val>
          </eq>
          <ge>
            <fld name="PayCal.PayCalEndDt" />
            <val>[Date]</val>
          </ge>
        </and>
      </where>
      <order>
        <fld name="PayCalEndDt" />
      </order>
    </dataset>

    <dataset name="PayPerLookup" cacheable="No">
      <tables>
        <tbl name="PayGrp" />
      </tables>
      <display>
        <fld name="PayGrp.PayPer" />
        <fld name="PayGrp.SalStDtRst" />
        <fld name="PayGrp.SalEndDtRst" />
      </display>
      <where>
        <eq>
          <fld name="PayGrp.PayGrp" />
          <val>[N_PayGrp_main_1]</val>
        </eq>
      </where>
    </dataset>

     <dataset name="DelEmlCur">
      <sql>
        exec delEmlCur '[N_Emp_main_1]' , '[N_Eml_main_1]'
      </sql>
    </dataset>


    <dataset name="Cfg">
      <tables>
        <tbl name="Cfg" />
      </tables>
      <display>
        <fld name="Cfg.ConfigValues" />
      </display>
      <where>
        <eq>
          <fld name="Cfg.Cfg" />
          <val>[varCfg]</val>
        </eq>
      </where>
    </dataset>

    <dataset name="GetEntInfo">
      <tables>
        <tbl name="Ent" />
      </tables>
      <display>
        <fld name="Ent.Cmp" />
        <fld name="Ent.Div" />
        <fld name="Ent.Dpt" />
        <fld name="Ent.Loc" />
        <fld name="Ent.Org" />
        <fld name="Ent.Unt" />
      </display>
      <where>
        <eq>
          <fld name="Ent.Ent" />
          <val>[N_PrmEnt]</val>
        </eq>
      </where>
    </dataset>

    <dataset name="Primary">
      <tables>
        <tbl name="Eml" />
      </tables>
      <display>
        <fld name="Eml.*" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="IsPrm" />
            <val type="Number">1</val>
          </eq>
          <eq>
            <fld name="Emp" />
            <val type="String">[varEmp]</val>
          </eq>
        </and>
      </where>
    </dataset>

    <dataset name="CountPayGrpEml">
      <tables>
        <tbl name="Eml" />
      </tables>
      <display>
        <fld name="CntEml" origname="*" summary="Count" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="Eml.Emp" />
            <val>[N_Emp_main_1]</val>
          </eq>
          <in>
            <fld name="Eml.PayGrp" />
            <val>[N_PayGrp_main_1]</val>
          </in>
          <eq>
            <fld name="Eml.isPrm" />
            <val type="YesNo">Yes</val>
          </eq>
        </and>
      </where>
    </dataset>

    <dataset name="DelEml">
      <tables>
        <tbl name="Eml" />
      </tables>
      <fields>
        <fld display="Yes" name="EmlEfdDt" />
      </fields>
      <where>
        <eq>
          <fld name="EmlId" />
          <val type="String">[F_Id_main_1]</val>
        </eq>
      </where>
      <includehistory>Yes</includehistory>
    </dataset>

    <dataset name="DelPayGrpEml">
      <tables>
        <tbl name="Eml" />
      </tables>
      <display>
        <fld name="Eml.isPrm" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="Eml.Emp" />
            <val>[N_Emp_main_1]</val>
          </eq>
          <in>
            <fld name="Eml.PayGrp" />
            <val>[N_PayGrp_main_1]</val>
          </in>
          <eq>
            <fld name="Eml.isPrm" />
            <val type="YesNo">Yes</val>
          </eq>
          <ne>
            <fld name="Eml.Eml" />
            <val>[N_Eml_main_1]</val>
          </ne>
        </and>
      </where>
    </dataset>

    <dataset name="GetExpPayPd" type="SQLSelect">
      <sql>
        select datediff(wk,dbo.NuStrToDate('[VarPayCalStDt]','NuXML','DateOnly'),dbo.NuStrToDate('[VarPayCalEndDt]','NuXML','DateOnly')) as Weeks,
        (datediff(wk,dbo.NuStrToDate('[VarPayCalStDt]','NuXML','DateOnly'),dbo.NuStrToDate('[VarPayCalEndDt]','NuXML','DateOnly')) / 2) as Biweeks,
        ((datediff(d,dbo.NuStrToDate('[VarPayCalStDt]','NuXML','DateOnly'),dbo.NuStrToDate('[VarPayCalEndDt]','NuXML','DateOnly')) + 1) / 14) as Semimonths,
        (datediff(m,dbo.NuStrToDate('[VarPayCalStDt]','NuXML','DateOnly'),dbo.NuStrToDate('[VarPayCalEndDt]','NuXML','DateOnly')) + 1) as Months
      </sql>
    </dataset>

    <dataset name="ChgEmlEfdDt" canchange="Yes">
      <tables>
        <tbl name="Eml" />
      </tables>
      <display>
        <fld name="EmlId" />
        <fld name="EmlEfdDt" type="datetime"/>
      </display>
      <where>
        <eq>
          <fld name="EmlId" />
          <val>[fld_FchEmlEfdDt.EmlId]</val>
        </eq>
      </where>
      <includehistory>Yes</includehistory>
    </dataset>

    <dataset name="CntHstReq">
      <tables>
        <tbl name="Eml" />
      </tables>
      <fields>
        <fld name="NoOfHstRec" origname="1" display="Yes" summary="Count" />
      </fields>
      <where>
        <and>
          <eq>
            <fld name="Emp" />
            <val>[varEmp]</val>
          </eq>
          <eq>
            <fld name="Eml" />
            <val>[varEml]</val>
          </eq>
          <notnull>
            <fld name="EmlEfdDt" type="DateTime" />
          </notnull>
        </and>
      </where>
      <includehistory>Yes</includehistory>
    </dataset>

    <dataset name="FchEmlEfdDt">
      <tables>
        <tbl name="Eml" />
      </tables>
      <display>
        <fld name="Eml.EmlId" />
        <fld name="Eml.EmlEfdDt" />
      </display>
      <where>
        <and>
          <notnull>
            <fld name="EmlEfdDt" type="DateTime" />
          </notnull>
          <eq>
            <fld name="Emp" />
            <val>[varEmp]</val>
          </eq>
          <eq>
            <fld name="Eml" />
            <val>[varEml]</val>
          </eq>
        </and>
      </where>
      <includehistory>Yes</includehistory>
      <order>
        <fld name="EmlEffDt" descending="Yes" />
      </order>
      <top>1</top>
    </dataset>



    <dataset name="PayCalStDt" cacheable="No">
      <tables>
        <tbl name="PayCal" />
      </tables>
      <display>
        <fld name="PayCalStDt">
          <native lang="SQLServer">dbo.NuDateGetDate(PayCal.PayCalStDt)</native>
        </fld>
        <fld name="PayCalId" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="PayGrp" />
            <val>[N_PayGrp_main_1]</val>
          </eq>
          <ge>
            <fld name="PayCalStDt" />
            <val>[var_SalEffDt]</val>
          </ge>
        </and>
      </where>
      <order>
        <fld name="PayCalStDt" />
      </order>
    </dataset>

    <dataset name="PayCalEndDt" cacheable="No">
      <tables>
        <tbl name="PayCal" />
      </tables>
      <display>
        <fld name="PayCalEndDt">
          <native lang="SQLServer">dbo.NuDateGetDate(PayCal.PayCalEndDt)</native>
        </fld>
        <fld name="PayCalId" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="PayGrp" />
            <val>[N_PayGrp_main_1]</val>
          </eq>
          <ge>
            <fld name="PayCalEndDt" />
            <val>[var_SalEndDt]</val>
          </ge>
        </and>
      </where>
      <order>
        <fld name="PayCalEndDt" />
      </order>
    </dataset>

    <dataset name="UpdEmlPayPd">
      <tables>
        <tbl name="Eml" />
      </tables>
      <display>
        <fld name="Eml.ExpPayPd" />
      </display>
      <where>
        <eq>
          <fld name="Eml.EmlId" type="Integer" />
          <val>[EmlId]</val>
        </eq>
      </where>
    </dataset>

    <dataset name="payrngChk">
      <tables>
        <tbl name="PayRng" />
      </tables>
      <display>
        <fld name="PayRng.PayZon" />
        <fld name="PayRng.Minimum" />
        <fld name="PayRng.Midpoint" />
        <fld name="PayRng.Maximum" />
        <fld name="PayRng.RangePer" />
      </display>
      <find>
        <findwhere>
          <and>
            <eq>
              <fld name="PayRng.PayRng" type="String" />
              <val>[N_SysPayRng]</val>
            </eq>
          </and>
        </findwhere>
      </find>
    </dataset>

    <dataset name="posdefault">
      <tables>
        <tbl name="Cfg" main="Yes" />
      </tables>
      <display>
        <fld name="ConfigValues" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="Cfg" type="String" />
            <val>PosDefault</val>
          </eq>
        </and>
      </where>
    </dataset>

    <dataset name="TotalFTE">
      <tables>
        <tbl name="Eml" main="Yes" />
      </tables>
      <display>
        <fld name="FTEAmt">
          <native lang="SQLServer">convert(decimal(30,2),Sum(FTE))</native>
        </fld>
      </display>
      <where>
        <eq>
          <fld name="Eml.Emp" type="String" />
          <val>[fld_main.Emp]</val>
        </eq>
      </where>
    </dataset>
<!--
    <dataset name="SituFromPos">
      <tables>
        <tbl name="Pos" main="Yes" />
        <tbl name="Eml" join="LEFT" to="Pos">
          <and>
            <eq>
              <fld name="Eml.Pos" />
              <fld name="Pos.Pos" />
            </eq>
            <isnull>
              <fld name="Eml.EmlEfdDt" />
            </isnull>
            <or>
              <eq>
                <fld name="Eml.EmpSts" type="String"/>
                <val>Active</val>
              </eq>
              <eq>
                <fld name="Eml.EmpSts" type="String"/>
                <val>On Leave</val>
              </eq>
            </or>
          </and>
        </tbl>
      </tables>
      <display>
        <fld name="Pos.Pos" type="String" />
        <fld name="Pos.Job" type="String" />
        <fld name="Pos.Cmp" type="String" />
        <fld name="Pos.Div" type="String" />
        <fld name="Pos.Dpt" type="String" />
        <fld name="Pos.Loc" type="String" />
        <fld name="Pos.Org" type="String" />
        <fld name="Pos.PosSts" type="String" />
        <fld name="Pos.Unt" type="String" />
        <fld name="Pos.SupPos" type="String" />
        <fld name="Pos.PayRng" type="String" />
        <fld name="Pos.ExemptionStatus" type="String" />
        <fld name="Pos.WrkSts" type="String" />
        <fld name="Eml.Emp" type="String" />
        <fld name="EmlPos" origname="Eml.Pos" type="String" />
      </display>
      <find>
        <findwhere>
          <and>
            <eq>
              <fld name="Pos.Pos" type="String" />
              <val>[N_Pos]</val>
            </eq>
          </and>
        </findwhere>
      </find>
    </dataset>
-->
    <dataset name="cur">
      <tables>
        <tbl name="Cur" />
      </tables>
      <display>
        <fld name="FExchangeRate" origname="Cur.ExchangeRate" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="Cur" type="String" />
            <val>[fld_main.ForCur]</val>
          </eq>
        </and>
      </where>
    </dataset>

    <dataset name="Lcur">
      <tables>
        <tbl name="Cur" />
      </tables>
      <display>
        <fld name="LExchangeRate" origname="ISNull(Cur.ExchangeRate,1)" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="Cur" type="String" />
            <val>[fld_main.Cur]</val>
          </eq>
        </and>
      </where>
    </dataset>

    <dataset name="payrng">
      <tables>
        <tbl name="PayRng" main="Yes"/>
        <tbl name="Eml" join="LEFT" to="PayRng">
          <eq>
            <fld name="PayRng.PayRng" />
            <fld name="Eml.PayRng" />
          </eq>
        </tbl>
      </tables>
      <display>
        <fld name="PayRng.PayZon" />
        <fld name="PayRng.Minimum" />
        <fld name="PayRng.Midpoint" />
        <fld name="PayRng.Maximum" />
        <fld name="PayRng.RangePer" />
        <fld name="PayRng.PayRngCur" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="Eml.EmlId" />
            <val>[F_NavId]</val>
          </eq>
          <le>
            <fld name="PayRng.PayRngEffDt" type="date" />
            <fld name="PayRangeEffDt" type="date">
              <native lang="SQLServer">
                ISNULL(ISNULL(Eml.PayRngEffDt, Eml.SalEffDt), Eml.EmlEffDt)
              </native>
            </fld>
          </le>
          <or>
            <isnull><fld name="PayRng.PayRngEfdDt" /></isnull>
            <gt>
              <fld name="PayRng.PayRngEfdDt" type="date" />
              <fld name="PayRangeEffDt" type="date">
                <native lang="SQLServer">
                  ISNULL(ISNULL(Eml.PayRngEffDt, Eml.SalEffDt), Eml.EmlEffDt)
                </native>
              </fld>
            </gt>
          </or>
        </and>
      </where>
      <order>
        <fld name="PayRng.PayRngEffDt" descending="yes" />
      </order>
      <top>1</top>
      <includehistory>Yes</includehistory>
    </dataset>

    <dataset name="CSvyData">
      <tables>
        <tbl name="CSvyData" />
        <tbl name="CSvy" join="LEFT" to="CSvyData">
          <and>
            <eq>
              <fld name="CSvy.CSvy" />
              <fld name="CSvyData.CSvy" />
            </eq>
            <eq>
              <fld name="CSvy.CSvyYear" />
              <fld name="CSvyData.CSvyYear" />
            </eq>
          </and>
        </tbl>
        <tbl name="CSvyJob" join="LEFT" to="CSvyData" main="Yes">
          <and>
            <eq>
              <fld name="CSvyJob.CSvy" />
              <fld name="CSvyData.CSvy" />
            </eq>
            <eq>
              <fld name="CSvyJob.CSvyYear" />
              <fld name="CSvyData.CSvyYear" />
            </eq>
            <eq>
              <fld name="CSvyJob.CSvyJob" />
              <fld name="CSvyData.CSvyJob" />
            </eq>
          </and>
        </tbl>
      </tables>
      <display>
        <fld name="CSvy.CSvyCde" />
        <fld name="CSvyJob.CSvyWageTyp" />
        <fld name="CSvyData.CSvy" />
        <fld name="CSvyData.CSvyYear" />
        <fld name="CSvyData.CSvyJob" />
        <fld name="CSvyData.CSvyScope" />
        <fld name="CSvyData.CSvySal20Pct" />
        <fld name="CSvyData.CSvySal25Pct" />
        <fld name="CSvyData.CSvySal40Pct" />
        <fld name="CSvyData.CSvySal50Pct" />
        <fld name="CSvyData.CSvySal60Pct" />
        <fld name="CSvyData.CSvySal75Pct" />
        <fld name="CSvyData.CSvySal80Pct" />
        <fld name="CSvyData.CSvyH20Pct" />
        <fld name="CSvyData.CSvyH25Pct" />
        <fld name="CSvyData.CSvyH40Pct" />
        <fld name="CSvyData.CSvyH50Pct" />
        <fld name="CSvyData.CSvyH60Pct" />
        <fld name="CSvyData.CSvyH75Pct" />
        <fld name="CSvyData.CSvyH80Pct" />
        <fld name="CSvy20PctDiff">
          <if>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>S</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvySal20Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varAnnlSal]</val>
                  <fld name="CSvyData.CSvySal20Pct" />
                </minus>
                <fld name="CSvyData.CSvySal20Pct" />
              </divide>
            </then>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>H</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvyH20Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varHrlySal]</val>
                  <fld name="CSvyData.CSvyH20Pct" />
                </minus>
                <fld name="CSvyData.CSvyH20Pct" />
              </divide>
            </then>
            <else>
              <val>0</val>
            </else>
          </if>
        </fld>
        <fld name="CSvy25PctDiff">
          <if>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>S</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvySal25Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varAnnlSal]</val>
                  <fld name="CSvyData.CSvySal25Pct" />
                </minus>
                <fld name="CSvyData.CSvySal25Pct" />
              </divide>
            </then>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>H</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvyH25Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varHrlySal]</val>
                  <fld name="CSvyData.CSvyH25Pct" />
                </minus>
                <fld name="CSvyData.CSvyH25Pct" />
              </divide>
            </then>
            <else>
              <val>0</val>
            </else>
          </if>
        </fld>
        <fld name="CSvy40PctDiff">
          <if>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>S</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvySal40Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varAnnlSal]</val>
                  <fld name="CSvyData.CSvySal40Pct" />
                </minus>
                <fld name="CSvyData.CSvySal40Pct" />
              </divide>
            </then>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>H</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvyH40Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varHrlySal]</val>
                  <fld name="CSvyData.CSvyH40Pct" />
                </minus>
                <fld name="CSvyData.CSvyH40Pct" />
              </divide>
            </then>
            <else>
              <val>0</val>
            </else>
          </if>
        </fld>
        <fld name="CSvy50PctDiff">
          <if>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>S</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvySal50Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varAnnlSal]</val>
                  <fld name="CSvyData.CSvySal50Pct" />
                </minus>
                <fld name="CSvyData.CSvySal50Pct" />
              </divide>
            </then>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>H</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvyH50Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varHrlySal]</val>
                  <fld name="CSvyData.CSvyH50Pct" />
                </minus>
                <fld name="CSvyData.CSvyH50Pct" />
              </divide>
            </then>
            <else>
              <val>0</val>
            </else>
          </if>
        </fld>
        <fld name="CSvy60PctDiff">
          <if>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>S</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvySal60Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varAnnlSal]</val>
                  <fld name="CSvyData.CSvySal60Pct" />
                </minus>
                <fld name="CSvyData.CSvySal60Pct" />
              </divide>
            </then>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>H</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvyH60Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varHrlySal]</val>
                  <fld name="CSvyData.CSvyH60Pct" />
                </minus>
                <fld name="CSvyData.CSvyH60Pct" />
              </divide>
            </then>
            <else>
              <val>0</val>
            </else>
          </if>
        </fld>
        <fld name="CSvy75PctDiff">
          <if>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>S</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvySal75Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varAnnlSal]</val>
                  <fld name="CSvyData.CSvySal75Pct" />
                </minus>
                <fld name="CSvyData.CSvySal75Pct" />
              </divide>
            </then>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>H</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvyH75Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varHrlySal]</val>
                  <fld name="CSvyData.CSvyH75Pct" />
                </minus>
                <fld name="CSvyData.CSvyH75Pct" />
              </divide>
            </then>
            <else>
              <val>0</val>
            </else>
          </if>
        </fld>
        <fld name="CSvy80PctDiff">
          <if>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>S</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvySal80Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varAnnlSal]</val>
                  <fld name="CSvyData.CSvySal80Pct" />
                </minus>
                <fld name="CSvyData.CSvySal80Pct" />
              </divide>
            </then>
            <when>
              <and>
                <eq>
                  <fld name="CSvyJob.CSvyWageTyp" />
                  <val>H</val>
                </eq>
                <gt>
                  <fld name="CSvyData.CSvyH80Pct" />
                  <val>0</val>
                </gt>
              </and>
            </when>
            <then>
              <divide>
                <minus>
                  <val>[varHrlySal]</val>
                  <fld name="CSvyData.CSvyH80Pct" />
                </minus>
                <fld name="CSvyData.CSvyH80Pct" />
              </divide>
            </then>
            <else>
              <val>0</val>
            </else>
          </if>
        </fld>
        <fld name="CSvyName">
          <append>
            <fld name="CSvy.CSvyCde" />
            <val> (</val>
            <fld name="CSvy.CSvyName" />
            <val>)</val>
          </append>
        </fld>
        <fld name="CSvyJobTitle">
          <append>
            <fld name="CSvyData.CSvyJob" />
            <val> (</val>
            <fld name="CSvyJob.CSvyJobTitle" />
            <val>)</val>
          </append>
        </fld>
      </display>
      <where>
        <and>
          <notnull>
            <fld name="CSvyJob.CSvyJobMtc" />
          </notnull>
          <ne>
            <val>[varNoJob]</val>
            <val>Yes</val>
          </ne>
          <or>
            <like>
              <fld name="CSvyJob.CSvyJobMtc" />
              <val>[varJob]</val>
            </like>
            <like>
              <fld name="CSvyJob.CSvyJobMtc" />
              <val>%,[varJob],%</val>
            </like>
            <like>
              <fld name="CSvyJob.CSvyJobMtc" />
              <val>%,[varJob]</val>
            </like>
            <like>
              <fld name="CSvyJob.CSvyJobMtc" />
              <val>[varJob],%</val>
            </like>
          </or>
        </and>
      </where>
      <order>
        <fld name="CSvyData.CSvy" />
        <fld name="CSvyData.CSvyYear" />
        <fld name="CSvyData.CSvyJob" />
      </order>
    </dataset>

    <dataset name="GetEmpCde">
      <tables>
        <tbl name="Emp"/>
        <tbl name="CmpDir" join="LEFT" to="Emp">
         <eq>
          <fld name="Emp.Emp" />
          <fld name="CmpDir.Emp" />
         </eq>
        </tbl>
      </tables>
      <display>
        <fld name="EmpCde">
          <append>
            <fld name="CmpDir.Emp" type="String">
              <native lang="SQLServer">isnull(CmpDir.Emp, Emp.Emp)</native>
            </fld>
            <val> {</val>
            <fld name="CmpDir.LastName" type="String">
              <native lang="SQLServer">isnull(CmpDir.LastName, Emp.LastName)</native>
            </fld>
            <val>, </val>
            <fld name="CmpDir.FirstName" type="String">
              <native lang="SQLServer">isnull(CmpDir.FirstName, Emp.FirstName)</native>
            </fld>
            <val>}</val>
          </append>
        </fld>
       </display>
      <where>
        <and>
          <or>
           <eq>
            <fld name="CmpDir.Emp" type="String" />
            <val>[N_varEmpId]</val>
           </eq>
           <isnull>
             <fld name="CmpDir.Emp" />
           </isnull>
          </or>
          <or>
          <eq>
            <fld name="Emp.Emp" type="String" />
            <val>[N_varEmpId]</val>
           </eq>
           <isnull>
             <fld name="Emp.Emp" />
           </isnull>
         </or>
       </and>
      </where>
      <includehistory>Yes</includehistory>
    </dataset>


    <dataset name="pos">
      <tables>
        <tbl name="Pos" />
      </tables>
      <display>
        <fld name="Pos.PosTitle" />
        <fld name="PosCde">
          <append>
            <fld name="Pos.Pos" type="String" />
            <val> {</val>
            <fld name="Pos.PosTitle" type="String" />
            <val>}</val>
          </append>
        </fld>
      </display>
      <where>
        <and>
          <eq>
            <fld name="Pos" type="String" />
            <val>[fld_main.Pos]</val>
          </eq>
        </and>
      </where>
      <includehistory>Yes</includehistory>
    </dataset>

    <dataset name="JobPayStpSal">
      <tables>
        <tbl name="Job" />
      </tables>
      <display>
        <fld name="Job.PayStpSal" />
      </display>
      <where>
        <eq>
          <fld name="Job.Job" />
          <val>[N_Job]</val>
        </eq>
      </where>
    </dataset>

    <dataset name="PayStpAmt">
      <tables>
        <tbl name="PayStpAmt" />
        <tbl name="PayRng" join="INNER" to="PayStpAmt">
          <eq>
            <fld name="PayRng.PayRng" />
            <fld name="PayStpAmt.PayRng" />
          </eq>
        </tbl>
        <tbl name="StdCont" join="INNER" to="PayRng">
          <and>
            <eq>
              <fld name="StdCont.Tbl" />
              <val>SalPer</val>
            </eq>
            <eq>
              <fld name="PayRng.RangePer" />
              <fld name="StdCont.Val" />
            </eq>
          </and>
        </tbl>
      </tables>
      <display>
        <fld name="PayStpAmt.PayStpAmt" />
        <!-- REQ#1248-SLC-NV : PayStpAmtCur Field Added -->
        <fld name="PayStpAmt.PayStpAmtCur" />
        <fld name="SalPer" origname="StdCont.Dsp" />
        <!-- REQ#1248-SLC-NV : SalPerCde is Added to Fetch the SalPer Code value -->
        <fld name="SalPerCde" origname="StdCont.Val" />
      </display>
      <where>
        <and>
          <eq>
            <fld name="PayStpAmt.PayStp" />
            <val>[N_PayStp]</val>
          </eq>
          <eq>
            <fld name="PayStpAmt.PayRng" />
            <val>[N_PayRng]</val>
          </eq>
        </and>
      </where>
    </dataset>
    
    <dataset name="CurrentDfTs">
      <tables>
        <tbl name="EmpDfTs" main="Yes"/>
      </tables>
      <display>
        <fld name="EmpDfTs.Emp" key="Yes"/>
        <fld name="EmpDfTs.Eml" key="Yes"/>
        <fld name="EmpDfTsEffDt"/>
        <fld name="EmpDfTsEfdDt"/>
      </display>
      <where>
        <and>
          <eq>
            <fld name="EmpDfTs.Emp"/>
            <val>[N_Emp_main_1]</val>
          </eq>
          <eq>
            <fld name="EmpDfTs.Eml"/>
            <val>[N_Eml_main_1]</val>
          </eq>
          <isnull>
            <fld name="EmpDfTs.EmpDfTsEfdDt" type="Date" />
          </isnull>
        </and>
      </where>
      <verify>No</verify>
    </dataset>
    
    <dataset name="DelEmpDfTSDtl" canchange="Yes">
  	  <tables>
    	<tbl name="EmpDfTSDtl" main="Yes" />
  	  </tables>
  	  <display>
    	<fld name="EmpDfTSDtl.*" />
  	  </display>
  	  <where>
        <eq>
          <fld name="EmpDfTsCde" />
          <val>[VarEmpDfTsCde]</val>
        </eq>
      </where>
      <verify>No</verify>
    </dataset>

    <dataset name="main">
      <tables>
        <tbl name="Emp" />
        <tbl name="Eml" main="Yes" join="LEFT" to="Emp">
          <and>
            <eq>
              <fld name="Emp.Emp" />
              <fld name="Eml.Emp" />
            </eq>
            <isnull>
              <fld name="Emp.EmpEfdDt" />
            </isnull>
            <isnull>
              <if>
                <when>
                  <eq>
                    <val>[P_vfrm]</val>
                    <val>EmlCurr</val>
                  </eq>
                </when>
                <then>
                    <fld name="Eml.EmlEfdDt" />
                </then>
              </if>
            </isnull>
          </and>
        </tbl>
        <tbl name="PayGrp" join="LEFT" to="Eml">
          <eq>
            <fld name="PayGrp.PayGrp" />
            <fld name="Eml.PayGrp" />
          </eq>
        </tbl>
      </tables>
      <display>
        <fld name="Eml.*" />
        <!-- <fld name="NoHstDate">
          <native lang="SQLServer">dbo.UDF_getCstTrgDt('NoHistory')</native>
        </fld> -->
        <script name="EmpHeaderFlds" />
        <fld name="PayGrp.SalStDtRst" />
        <fld name="PayGrp.SalEndDtRst" />
      </display>
      <order>
        <fld name="EmlEffDt" descending="Yes" />
        <fld name="Eml" />
      </order>
      <disable history="[N_SysNoHstReq_main_1]" />
      <verify>No</verify>
      <includehistory>[P_varhis]</includehistory>
    </dataset>
  <!-- Static Dataset Declaration Declaration Block Ends Here -->
  <!-- View Definition Part Starts Here -->
    <view name="list">
      <script name="EmpHeaderCtls" />
      <display>
        <if>
          <when>
            <eq>
              <val>[P_vfrm]</val>
              <val>EmlCurr</val>
            </eq>
          </when>
          <then>
            <title>Employee Employment</title>
          </then>
          <else>
            <if>
              <when>
                <eq>
                  <val>[P_vfrm]</val>
                  <val>Eml</val>
                </eq>
              </when>
              <then>
                <title>Employment</title>
              </then>
              <else>
                <title>Employment Change</title>
              </else>
            </if>
          </else>
        </if>
        <instructions>Enter Employee Employment Information</instructions>
        <head />
        <toolbar>
          <add />
        </toolbar>
        <body>
          <datasheet dataset="main" headers="TOP">
            <script name="EmlHeaderGrp" />
            <row>
              <col>[ctl_Eml]</col>
              <col wrap="No">[ctl_EmlEffDt]</col>
              <if>
                <when>
                  <eq>
                    <val>[P_vfrm]</val>
                    <val>Eml</val>
                  </eq>
                </when>
                <then>
                  <col wrap="No">[ctl_EmlEfdDt]</col>
                </then>
              </if>
              <col>[ctl_EmlChgRsn]</col>
              <col>[ctl_EmpSts]</col>
              <col wrap="No">[ctl_Job]</col>
              <col>[ctl_Loc]</col>
              <col>[ctl_AnnlSal]</col>
              <col>[ctl_FTE]</col>
              <col>[ctl_SalChgRsn]</col>
              <if>
                <when>
                  <eq>
                    <val>[F_Mode]</val>
                    <val>SSChg</val>
                  </eq>
                </when>
                <then>
                  <col>[ctl_RecTyp]</col>
                </then>
              </if>
            </row>
          </datasheet>
        </body>
      </display>
    </view>

    <view name="edit">
      <script name="EmpHeaderCtls" />
      <script name="ActCtl" />
      <display>
        <if>
          <when>
            <eq>
              <val>[P_vfrm]</val>
              <val>EmlCurr</val>
            </eq>
          </when>
          <then>
            <title>Employee Employment</title>
          </then>
          <else>
            <if>
              <when>
                <eq>
                  <val>[P_vfrm]</val>
                  <val>Eml</val>
                </eq>
              </when>
              <then>
                <title>Employment</title>
              </then>
              <else>
                <title>Employment Change</title>
              </else>
            </if>
          </else>
        </if>
        <instructions>Enter Employee Employment Information</instructions>
        <head />
        <if>
          <when>
            <eq>
              <val>[P_vfrm]</val>
              <val>EmlCurr</val>
            </eq>
          </when>
          <then>
            <toolbar>
              <add />
              <save />
            </toolbar>
          </then>
          <else>
            <toolbar>
              <add />
              <save />
              <delete />
            </toolbar>
          </else>
        </if>
        <body>
          <datasheet dataset="main" headers="OVER">
            <hidden>[ctl_SysPayRng]</hidden>
            <if>
              <when>
                <ne>
                  <val>[fld_main.ForCur]</val>
                  <val></val>
                </ne>
              </when>
              <then>
                <datasetopen dataset="cur"/>
                <datasetnext dataset="cur"/>
                  <set var="[ForeignRate]">[fld_cur.FExchangeRate]</set>
                <datasetclose dataset="cur"/>
              </then>
            </if>
            <if>
              <when>
                <ne>
                  <val>[fld_main.Cur]</val>
                  <val></val>
                </ne>
              </when>
              <then>
                <datasetopen dataset="Lcur"/>
                <datasetnext dataset="Lcur"/>
                  <set var="[LRate]">[fld_Lcur.LExchangeRate]</set>
                <datasetclose dataset="Lcur"/>
              </then>
            </if>
            <if>
              <when>
                <ne>
                  <val>[fld_main.Pos]</val>
                  <val></val>
                </ne>
              </when>
              <then>
                <datasetopen dataset="pos"/>
                <datasetnext dataset="pos"/>
                  <set var="[varpos]">[fld_pos.PosCde]</set>
                <datasetclose dataset="pos"/>
              </then>
            </if>
            <!--<if>
              <when>
                <ne>
                  <val>[fld_main.Sup]</val>
                  <val></val>
                </ne>
              </when>
              <then>
                <set var="[N_varEmpId]">[fld_main.Sup]</set>
                <datasetopen dataset="GetEmpCde"/>
                <datasetnext dataset="GetEmpCde"/>
                  <set var="[varsup]">[fld_GetEmpCde.EmpCde]</set>
                <datasetclose dataset="GetEmpCde"/>
              </then>
            </if> //Moved this piece to OnLoad. NVHCID-7883 -->
			<if>
              <when>
                <ne>
                  <val>[fld_main.TimAttReviewer]</val>
                  <val></val>
                </ne>
              </when>
              <then>
                <set var="[N_varEmpId]">[fld_main.TimAttReviewer]</set>
                <datasetopen dataset="GetEmpCde"/>
                <datasetnext dataset="GetEmpCde"/>
                  <set var="[varTimAttReviewer]">[fld_GetEmpCde.EmpCde]</set>
                <datasetclose dataset="GetEmpCde"/>
              </then>
            </if>
            <if when="[fld_main.CpsRvwr]">
              <set var="[N_varEmpId]">[fld_main.CpsRvwr]</set>
              <datasetopen dataset="GetEmpCde"/>
              <datasetnext dataset="GetEmpCde"/>
                <set var="[varCpsRvwr]">[fld_GetEmpCde.EmpCde]</set>
              <datasetclose dataset="GetEmpCde"/>
            </if>
            <if>
              <when>
                <ne>
                  <val>[fld_main.PayRng]</val>
                  <val></val>
                </ne>
              </when>
              <then>
                <datasetopen dataset="payrng"/>
                <datasetnext dataset="payrng"/>
                  <!-- REQ#1248-SLC-NV: PayRngCur Value Added -->
                  <set var="[VarPayRngCur]">[fld_payrng.PayRngCur]</set>
                  <!-- REQ#1248-SLC-NV: Currency Conversion Logic Implemented -->
                  <set var="[Maximum]">
                    <convertcur>
                      <orig>[fld_payrng.Maximum]</orig>
                      <from>[fld_main.SalRatCur]</from>
                      <to>[fld_payrng.PayRngCur]</to>
                      <exchangedt>[Date]</exchangedt>
                    </convertcur>
                  </set>
                  <set var="[Minimum]">
                    <convertcur>
                      <orig>[fld_payrng.Minimum]</orig>
                      <from>[fld_main.SalRatCur]</from>
                      <to>[fld_payrng.PayRngCur]</to>
                      <exchangedt>[Date]</exchangedt>
                    </convertcur>
                  </set>
                  <set var="[Midpoint]">
                    <convertcur>
                      <orig>[fld_payrng.Midpoint]</orig>
                      <from>[fld_main.SalRatCur]</from>
                      <to>[fld_payrng.PayRngCur]</to>
                      <exchangedt>[Date]</exchangedt>
                    </convertcur>
                  </set>
                  <set var="[PayZon]">[fld_payrng.PayZon]</set>
                  <set var="[RangePer]">[fld_payrng.RangePer]</set>
                <datasetclose dataset="payrng"/>
              </then>
            </if>
           <set var="[varCfg]">EntPrc</set>
       <datasetopen dataset="Cfg" />
            <datasetnext dataset="Cfg" />
              <set var="[varEntPrc]">[fld_Cfg.ConfigValues]</set>
            <datasetclose dataset="Cfg" />

            <set var="[varReadonly]">No</set>
            <if>
              <when>
                <eq>
                  <val>[varEntPrc]</val>
                  <val>BothEnforced</val>
                </eq>
              </when>
              <then>
                <set var="[varReadonly]">Yes</set>
              </then>
            </if>
            <script name="EmpHeaderGrp" />
            <if>
              <when>
                <and>
                  <eq>
                    <val>[P_vfrm]</val>
                    <val>EmlCurr</val>
                  </eq>
                  <ne>
                    <val>[F_Mode]</val>
                    <val>SSChg</val>
                  </ne>
                  <ne>
                    <val>[fld_EmpSts]</val>
                    <val>Terminated</val>
                  </ne>
                </and>
              </when>
              <then>
                <row>
                  <col>[ctl_Terminate]</col>
                </row>
              </then>
            </if>
            <row>
              <col>
    <!-- ************************************* EML CURR ************************ -->
                <if>
                  <when>
                    <or>
                      <eq>
                        <val>[P_vfrm]</val>
                        <val>EmlCurr</val>
                      </eq>
                      <eq>
                        <val>[P_vfrm]</val>
                        <val>Eml</val>
                      </eq>
                      <eq>
                        <val>[P_vfrm]</val>
                        <val />
                      </eq>
                    </or>
                  </when>
                  <then>
                    <tabset>
                      <tab name="Employment" selected="Yes">
                        <datasheet dataset="main" headers="LEFT" next="No">
                          <row>
                            <col>[ctl_Eml]</col>
                            <col>[ctl_FileNo]</col>
                          </row>
                          <row>
                            <col>[ctl_EmlChgRsn]</col>
                            <col>[ctl_EmlEffDt]</col>
                          </row>
                          <row>
                            <col>[ctl_EmpSts]</col>
                            <col>[ctl_StsEffDt]</col>
                          </row>
                          <row>
                            <col>[ctl_IsPrm][ctl_SysPayGrpCnt][ctl_SysDelRec]</col>
                          </row>
                          <row>
                             <if>
                              <when>
                                <eq>
                                  <val>[F_Application]</val>
                                  <val>HR</val>
                                </eq>
                              </when>
                              <then>
                               <col>[ctl_SysNoHstReq]</col>
                              </then>
                            </if>
                          </row>
                          <row>
                            <col>[ctl_WrkSts]</col>
                            <if>
                              <when>
                                <eq>
                                  <val>[P_vfrm]</val>
                                  <val>Eml</val>
                                </eq>
                              </when>
                              <then>
                                <col>[ctl_SysEmlEfdDt]</col>
                              </then>
                            </if>
                          </row>
                          <row>
                            <col>[ctl_ExmptSts]</col>
                          </row>
                          <row>
                            <col>[ctl_PayGrp][ctl_SysSalStDtRst][ctl_SysSalEndDtRst]</col>
                          </row>
                          <row>
                            <col>[ctl_CpsGrp]</col>
                            <col>[ctl_CpsRvwr]</col>
                          </row>
                          <row>
                            <col>[ctl_TimCrdGrp]</col> <col>[ctl_TimAttReviewer]</col>
                          </row>
                          <row>
                            <col>[ctl_Clk]</col>
                          </row>
                          <row>
                            <col>[ctl_CstCde]</col>
                          </row>
                          <row>
                            <col span="2">[ctl_EnrTyp]</col>
                          </row>
                          <!-- 29305-LM-NV: Control PrfGrp Added -->
                          <row>
                            <col span="2">[ctl_PrfGrp]</col>
                          </row>
                          <row>
                            <col>[ctl_BenGrp]</col>
                          </row>
                          <row>
                            <col>[ctl_Shf]</col>
                            <col>[ctl_ShfEffDt]</col>
                          </row>
                          <row>
                            <col>[ctl_Uno]</col>
                            <col>[ctl_UnoEffDt]</col>
                          </row>
                          <row>
                            <col>[ctl_Sup]</col>
                            <col>[ctl_SupEffDt]</col>
                          </row>
              <row>
                            <col>[ctl_CompanyCar]</col>
                          </row>
              <row>
                            <col>[ctl_ContractTyp]</col>
                          </row>
              <row>
                            <col>[ctl_TransitTyp]</col>
                          </row>
                        </datasheet>
                      </tab>
                      <tab name="Situation">
                        <datasheet dataset="posdefault" headers="LEFT">
                          <if>
                            <when>
                              <eq>
                                <val>[fld_posdefault.ConfigValues]</val>
                                <val>True</val>
                              </eq>
                            </when>
                            <then>
                              <row>
                                <col>[ctl_SysConfigValues]
                                  <v style="groupByHeader">[ctl_PosDefaults]</v>
                                </col>
                              </row>
                            </then>
                          </if>
                        </datasheet>
                        <datasheet dataset="main" headers="LEFT" next="No">
                          <row>
                            <col span="2">[ctl_Pos]</col>
                            <col>[ctl_PosEffDt]</col>
                          </row>
                          <row>
                            <col span="2">[ctl_Ent]</col>
                            <col>[ctl_EntEffDt][ctl_SysEntPrc]</col>
                          </row>
                          <row>
                            <col span="2">[ctl_Job]</col>
                            <col>[ctl_JobEffDt]</col>
                          </row>
                          <if>
                            <when>
                              <ne>
                                <val>[varEntPrc]</val>
                                <val>EntityOnly</val>
                              </ne>
                            </when>
                            <then>
                              <row>
                                <col span="2">[ctl_Cmp]</col>
                                <col>[ctl_CmpEffDt]</col>
                              </row>
                              <row>
                                <col span="2">[ctl_Loc]</col>
                                <col>[ctl_LocEffDt]</col>
                              </row>
                              <row>
                                <col span="2">[ctl_Org]</col>
                                <col>[ctl_OrgEffDt]</col>
                              </row>
                              <row>
                                <col span="2">[ctl_Div]</col>
                                <col>[ctl_DivEffDt]</col>
                              </row>
                              <row>
                                <col span="2">[ctl_Dpt]</col>
                                <col>[ctl_DptEffDt]</col>
                              </row>
                              <row>
                                <col span="2">[ctl_Unt]</col>
                                <col>[ctl_UntEffDt]</col>
                              </row>
                            </then>
                          </if>
                        </datasheet>
                      </tab>
                      <tab name="Local Salary">
                        <datasheet dataset="main" headers="LEFT" next="No">
                          <row>
                            <col>[ctl_SalChgRsn]</col>
                          </row>
                          <row id="SalEffDtComboTag">
                            <col>[ctl_SysSalEffCmb]</col>
                          </row>
                          <row id="SalEffDtDateTag">
                            <col>[ctl_SysSalEffDt][ctl_SalEffDt]</col>
                          </row>
                          <row id="SalEndDtComboTag">
                            <col>[ctl_SysSalEndCmb]</col>
                          </row>
                          <row id="SalEndDtDateTag">
                            <col>[ctl_SysSalEndDt][ctl_SalEndDt][ctl_SysIsSalEffCmb][ctl_SysIsSalEndCmb]</col>
                          </row>
                          <!-- REQ#1248-SLC-NV: Control Commented For Deprecating Eml.Cur Field -->
                          <!-- <row>
                            <col span="2">[ctl_Cur]</col>
                          </row> -->
                          <row>
                            <col>[ctl_PayStp]</col>
                            <col>[ctl_PayStpOvrid]</col>
                          </row>
                          <row>
                            <col span="2">[ctl_SalRat]</col>
                          </row>
                          <row>
                            <col>[ctl_SalPer]</col>
                            <col>[ctl_AnnlSal]</col>
                          </row>
                          <row>
                            <col>[ctl_PayPer]</col>
                            <col>[ctl_MnthSal]</col>
                          </row>
                          <if>
                            <when>
                              <eq>
                                <val>[fld_main.SalPer]</val>
                                <val>C</val>
                              </eq>
                            </when>
                            <then>
                              <row>
                                <col>[ctl_ExpPayPd]</col>
                              </row>
                            </then>
                          </if>
                          <row>
                            <col>[ctl_WrkHrs]</col>
                            <col>[ctl_SemiSal]</col>
                          </row>
                          <row>
                            <col>[ctl_WrkDays]</col>
                            <col>[ctl_BiWkSal]</col>
                          </row>
                          <row>
                            <col>[ctl_SalChgAmt]</col>
                            <col>[ctl_WklySal]</col>
                          </row>
                          <row>
                            <col>[ctl_SalChgPct]</col>
                            <col>[ctl_DalySal]</col>
                          </row>
                          <row>
                            <col>[ctl_NxtSalDt]</col>
                            <col>[ctl_HrlySal]</col>
                          </row>
                          <row>
                            <col>[ctl_NxtRvwDt]</col>
                          </row>
                          <row>
                            <col span="2">[ctl_ShfDiff]</col>
                          </row>
                          <row>
                            <col span="2">[ctl_FTE]</col>
                          </row>
                          <row>
                            <col span="2">[ctl_WCCode]</col>
                          </row>
               <row>
                            <col span="2">[ctl_PayNum]</col>
                          </row>
                        </datasheet>
                      </tab>
                      <tab name="Corporate Salary">
                        <datasheet dataset="main" headers="LEFT" next="No">
                          <row>
                            <col>[ctl_ForCur]</col>
                          </row>
                          <row>
                            <col>[ctl_FAnnlSal]</col>
                          </row>
                          <row>
                            <col>[ctl_FMnthSal]</col>
                          </row>
                          <row>
                            <col>[ctl_FSemiSal]</col>
                          </row>
                          <row>
                            <col>[ctl_FBiWkSal]</col>
                          </row>
                          <row>
                            <col>[ctl_FWklySal]</col>
                          </row>
                          <row>
                            <col>[ctl_FDalySal]</col>
                          </row>
                          <row>
                            <col>[ctl_FHrlySal]</col>
                          </row>
                        </datasheet>
                      </tab>
                      <tab name="Pay Range">
                        <datasheet dataset="main" headers="LEFT" next="No">
                          <row>
                            <col>[ctl_PayRng]</col>
                          </row>
                          <row>
                            <col>[ctl_PayRngEffDt]</col>
                          </row>
                          <row>
                            <col>[ctl_PayZon]</col>
                          </row>
                          <row>
                            <col>[ctl_CompaRatio]</col>
                          </row>
                          <row>
                            <col>[ctl_PctRng]</col>
                          </row>
                          <row>
                            <col>[ctl_Minimum]</col>
                          </row>
                          <row>
                            <col>[ctl_Midpoint]</col>
                          </row>
                          <row>
                            <col>[ctl_Maximum]</col>
                          </row>
                          <row>
                            <col>[ctl_CurSal]</col>
                          </row>
                        </datasheet>
                        <set var="[varAnnlSal]">0</set>
                        <set var="[varHrlySal]">0</set>
                        <set var="[varNoJob]">Yes</set>
                        <if when="[fld_main.Job]">
                          <set var="[varNoJob]">No</set>
                        </if>
                        <set var="[varJob]">[fld_main.Job]</set>
                        <if when="[fld_main.AnnlSal]">
                          <set var="[varAnnlSal]">[fld_main.AnnlSal]</set>
                        </if>
                        <if when="[fld_main.HrlySal]">
                          <set var="[varHrlySal]">[fld_main.HrlySal]</set>
                        </if>
                        <datasheet dataset="CSvyData" headers="TOP">
                          <set var="[varCSvyWageTyp]">[fld_CSvyData.CSvyWageTyp]</set>
                          <set var="[varCSvy20PctDiff]" />
                          <set var="[varCSvy25PctDiff]" />
                          <set var="[varCSvy40PctDiff]" />
                          <set var="[varCSvy50PctDiff]" />
                          <set var="[varCSvy60PctDiff]" />
                          <set var="[varCSvy75PctDiff]" />
                          <set var="[varCSvy80PctDiff]" />
                          <if>
                            <when>
                              <eq>
                                <val>[varCSvyWageTyp]</val>
                                <val>S</val>
                              </eq>
                            </when>
                            <then>
                              <if when="[fld_CSvyData.CSvySal20Pct]">
                                <set var="[varCSvy20PctDiff]">[fld_CSvyData.CSvy20PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvySal25Pct]">
                                <set var="[varCSvy25PctDiff]">[fld_CSvyData.CSvy25PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvySal40Pct]">
                                <set var="[varCSvy40PctDiff]">[fld_CSvyData.CSvy40PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvySal50Pct]">
                                <set var="[varCSvy50PctDiff]">[fld_CSvyData.CSvy50PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvySal60Pct]">
                                <set var="[varCSvy60PctDiff]">[fld_CSvyData.CSvy60PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvySal75Pct]">
                                <set var="[varCSvy75PctDiff]">[fld_CSvyData.CSvy75PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvySal80Pct]">
                                <set var="[varCSvy80PctDiff]">[fld_CSvyData.CSvy80PctDiff]</set>
                              </if>
                            </then>
                            <when>
                              <eq>
                                <val>[varCSvyWageTyp]</val>
                                <val>H</val>
                              </eq>
                            </when>
                            <then>
                              <if when="[fld_CSvyData.CSvyH20Pct]">
                                <set var="[varCSvy20PctDiff]">[fld_CSvyData.CSvy20PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvyH25Pct]">
                                <set var="[varCSvy25PctDiff]">[fld_CSvyData.CSvy25PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvyH40Pct]">
                                <set var="[varCSvy40PctDiff]">[fld_CSvyData.CSvy40PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvyH50Pct]">
                                <set var="[varCSvy50PctDiff]">[fld_CSvyData.CSvy50PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvyH60Pct]">
                                <set var="[varCSvy60PctDiff]">[fld_CSvyData.CSvy60PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvyH75Pct]">
                                <set var="[varCSvy75PctDiff]">[fld_CSvyData.CSvy75PctDiff]</set>
                              </if>
                              <if when="[fld_CSvyData.CSvyH80Pct]">
                                <set var="[varCSvy80PctDiff]">[fld_CSvyData.CSvy80PctDiff]</set>
                              </if>
                            </then>
                          </if>
                          <groups>
                            <groupby val="[fld_CSvyCde]">
                              <header>
                                <row>
                                  <col>[ctl_CSvyName]</col>
                                </row>
                              </header>
                            </groupby>
                            <groupby val="[fld_CSvyJob]">
                              <header>
                                <row>
                                  <col>[ctl_CSvyJobTitle]</col>
                                </row>
                              </header>
                            </groupby>
                          </groups>
                          <row>
                            <col>[ctl_CSvyScope]</col>
                            <col>[ctl_CSvy20PctDiff]</col>
                            <col>[ctl_CSvy25PctDiff]</col>
                            <col>[ctl_CSvy40PctDiff]</col>
                            <col>[ctl_CSvy50PctDiff]</col>
                            <col>[ctl_CSvy60PctDiff]</col>
                            <col>[ctl_CSvy75PctDiff]</col>
                            <col>[ctl_CSvy80PctDiff]</col>
                          </row>
                        </datasheet>
                      </tab>
        <tab name="User Defined Fields">
                <datasheet dataset="main" headers="LEFT" next="No">
                  <row>
                    <col>[ctl_UDField11]</col>
                  </row>
          <row>
                    <col>[ctl_UDField12]</col>
                  </row>
          <row>
                    <col>[ctl_UDField13]</col>
                  </row>
          <row>
                    <col>[ctl_UDField14]</col>
                  </row>
          <row>
                    <col>[ctl_UDField15]</col>
                  </row>
          <row>
                    <col>[ctl_UDField16]</col>
                  </row>
          <row>
                    <col>[ctl_UDField17]</col>
                  </row>
          <row>
                    <col>[ctl_UDField18]</col>
                  </row>
                  <row>
                    <col>[ctl_UDField19]</col>
                  </row>
                  <row>
                    <col>[ctl_UDField20]</col>
                  </row>
                </datasheet>
              </tab>
          </tabset>
                  </then>
    <!-- *************************************** EML CHG HRS ************************** -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlChgHrs</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlChgHrs" />
                  </then>
    <!-- ************************************* EML DEMOTION************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlDemotion</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlDemotion" />
                  </then>
    <!-- ************************************* EML FTE Change************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlFTEChange</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlFTEChange" />
                  </then>
    <!-- ************************************* EML Job Change************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlJobChange</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlJobChange" />
                  </then>
    <!-- ************************************* EML Location Change************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlLocChange</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlLocChange" />
                  </then>
    <!-- ************************************* EML Merit Adjustment ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlMerAdj</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlMerAdj" />
                  </then>
    <!-- ************************************* Organization Change ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlOrgChange</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlOrgChange" />
                  </then>
    <!-- ************************************* Position Change ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlPosChange</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlPosChange" />
                  </then>
    <!-- ************************************* Promotion Change ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlPromotion</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlPromotion" />
                  </then>
    <!-- ************************************* Relocation Change ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlRlc</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlRelocation" />
                  </then>
    <!-- ************************************* Salary Change ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>SalChange</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlSalChange" />
                  </then>
    <!-- ************************************* Shift Change ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlShfChange</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlShfChange" />
                  </then>
    <!-- ************************************* Status Change ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlStsChange</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlStsChange" />
                  </then>
    <!-- ************************************* Supervisor Change ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlSupChange</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlSupChange" />
                  </then>
    <!-- ************************************* Transfer Change ************************ -->
                  <when>
                    <eq>
                      <val>[P_vfrm]</val>
                      <val>EmlTrans</val>
                    </eq>
                  </when>
                  <then>
                    <script name="EmlTrans" />
                  </then>
                </if>
              </col>
            </row>
          </datasheet>
        </body>
      </display>
    </view>
  <!-- View Definition Part Ends Here -->
<!-- Form: Eml Ends -->
